
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/forecasting/plot_arima_search.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_forecasting_plot_arima_search.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_forecasting_plot_arima_search.py:


ARIMA search
------------

.. todo: Explain

.. GENERATED FROM PYTHON SOURCE LINES 8-117



.. image:: /_examples/forecasting/images/sphx_glr_plot_arima_search_001.png
    :alt: Non-dynamic predictions for ARIMA
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    1/128. ARIMA(3, 0, 2) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    5/128. ARIMA(1, 0, 3) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    7/128. ARIMA(1, 3, 2) [nc, False] ... failed: d > 2 is not supported
    8/128. ARIMA(1, 3, 2) [c, False] ... failed: d > 2 is not supported
    9/128. ARIMA(3, 0, 3) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    10/128. ARIMA(3, 0, 3) [c, False] ... failed: SVD did not converge
    15/128. ARIMA(1, 3, 1) [nc, False] ... failed: d > 2 is not supported
    16/128. ARIMA(1, 3, 1) [c, False] ... failed: d > 2 is not supported
    19/128. ARIMA(1, 0, 1) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    21/128. ARIMA(3, 3, 1) [nc, False] ... failed: d > 2 is not supported
    22/128. ARIMA(3, 3, 1) [c, False] ... failed: d > 2 is not supported
    23/128. ARIMA(1, 3, 0) [nc, False] ... failed: d > 2 is not supported
    24/128. ARIMA(1, 3, 0) [c, False] ... failed: d > 2 is not supported
    25/128. ARIMA(2, 3, 0) [nc, False] ... failed: d > 2 is not supported
    26/128. ARIMA(2, 3, 0) [c, False] ... failed: d > 2 is not supported
    27/128. ARIMA(3, 3, 0) [nc, False] ... failed: d > 2 is not supported
    28/128. ARIMA(3, 3, 0) [c, False] ... failed: d > 2 is not supported
    31/128. ARIMA(2, 3, 1) [nc, False] ... failed: d > 2 is not supported
    32/128. ARIMA(2, 3, 1) [c, False] ... failed: d > 2 is not supported
    33/128. ARIMA(3, 3, 3) [nc, False] ... failed: d > 2 is not supported
    34/128. ARIMA(3, 3, 3) [c, False] ... failed: d > 2 is not supported
    35/128. ARIMA(0, 2, 0) [nc, False] ... failed: Estimation requires the inclusion of least one AR term, MA term, a constant or an exogenous variable.
    37/128. ARIMA(2, 3, 2) [nc, False] ... failed: d > 2 is not supported
    38/128. ARIMA(2, 3, 2) [c, False] ... failed: d > 2 is not supported
    39/128. ARIMA(3, 3, 2) [nc, False] ... failed: d > 2 is not supported
    40/128. ARIMA(3, 3, 2) [c, False] ... failed: d > 2 is not supported
    43/128. ARIMA(2, 3, 3) [nc, False] ... failed: d > 2 is not supported
    44/128. ARIMA(2, 3, 3) [c, False] ... failed: d > 2 is not supported
    49/128. ARIMA(2, 0, 1) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    53/128. ARIMA(3, 2, 3) [nc, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    54/128. ARIMA(3, 2, 3) [c, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    55/128. ARIMA(0, 3, 2) [nc, False] ... failed: d > 2 is not supported
    56/128. ARIMA(0, 3, 2) [c, False] ... failed: d > 2 is not supported
    67/128. ARIMA(0, 3, 3) [nc, False] ... failed: d > 2 is not supported
    68/128. ARIMA(0, 3, 3) [c, False] ... failed: d > 2 is not supported
    71/128. ARIMA(2, 0, 3) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    79/128. ARIMA(0, 3, 0) [nc, False] ... failed: d > 2 is not supported
    80/128. ARIMA(0, 3, 0) [c, False] ... failed: d > 2 is not supported
    81/128. ARIMA(1, 2, 2) [nc, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    82/128. ARIMA(1, 2, 2) [c, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    83/128. ARIMA(2, 0, 2) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    89/128. ARIMA(0, 3, 1) [nc, False] ... failed: d > 2 is not supported
    90/128. ARIMA(0, 3, 1) [c, False] ... failed: d > 2 is not supported
    91/128. ARIMA(1, 2, 3) [nc, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    92/128. ARIMA(1, 2, 3) [c, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    93/128. ARIMA(0, 0, 0) [nc, False] ... failed: Estimation requires the inclusion of least one AR term, MA term, a constant or an exogenous variable.
    99/128. ARIMA(2, 2, 3) [nc, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    100/128. ARIMA(2, 2, 3) [c, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    105/128. ARIMA(2, 2, 2) [nc, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    106/128. ARIMA(2, 2, 2) [c, False] ... failed: The computed initial MA coefficients are not invertible
    You should induce invertibility, choose a different model order, or you can
    pass your own start_params.
    109/128. ARIMA(0, 1, 0) [nc, False] ... failed: Estimation requires the inclusion of least one AR term, MA term, a constant or an exogenous variable.
    123/128. ARIMA(3, 0, 1) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    125/128. ARIMA(1, 0, 2) [nc, False] ... failed: The computed initial AR coefficients are not stationary
    You should induce stationarity, choose a different model order, or you can
    pass your own start_params.
    127/128. ARIMA(1, 3, 3) [nc, False] ... failed: d > 2 is not supported
    128/128. ARIMA(1, 3, 3) [c, False] ... failed: d > 2 is not supported

    Summary:
       arima-order arima-trend  arima-aic  arima-bic
    0    (0, 2, 2)          nc   762.0588    769.129
    1    (0, 2, 2)           c    761.781   771.2078
    2    (1, 2, 1)          nc   764.3234   771.3936
    3    (0, 2, 3)          nc   764.0516   773.4785
    4    (1, 2, 1)           c    764.386   773.8128
    ..         ...         ...        ...        ...
    67   (0, 0, 1)           c   943.8782   951.0243
    68   (0, 0, 3)          nc   970.7583   980.2864
    69   (0, 0, 2)          nc   1011.031  1018.1771
    70   (0, 0, 0)           c  1016.3526  1021.1166
    71   (0, 0, 1)          nc   1080.073  1084.8371

    [72 rows x 4 columns]
     0. Estimator (bic=769.13): ARIMA(0, 2, 2) [nc, False] 
     1. Estimator (bic=771.21): ARIMA(0, 2, 2) [c, False] 
     2. Estimator (bic=771.39): ARIMA(1, 2, 1) [nc, False] 
     3. Estimator (bic=773.48): ARIMA(0, 2, 3) [nc, False] 
     4. Estimator (bic=773.81): ARIMA(1, 2, 1) [c, False] 
     5. Estimator (bic=774.08): ARIMA(0, 1, 1) [c, False] 
     6. Estimator (bic=774.45): ARIMA(2, 2, 1) [nc, False] 
     7. Estimator (bic=775.35): ARIMA(1, 1, 0) [c, False] 
     8. Estimator (bic=775.56): ARIMA(0, 2, 3) [c, False] 






|

.. code-block:: default
   :lineno-start: 8

    # Import.
    import sys
    import warnings
    import pandas as pd
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import ARIMA from statsmodels.
    from statsmodels.tsa.arima_model import ARIMA

    # import weights.
    from pyamr.datasets.load import make_timeseries
    from pyamr.core.regression.arima import ARIMAWrapper

    # Filter warnings
    warnings.simplefilter(action='ignore', category=FutureWarning)

    # ----------------------------
    # set basic configuration
    # ----------------------------
    # Matplotlib options
    mpl.rc('legend', fontsize=6)
    mpl.rc('xtick', labelsize=6)
    mpl.rc('ytick', labelsize=6)

    # Set pandas configuration.
    pd.set_option('display.max_colwidth', 14)
    pd.set_option('display.width', 150)
    pd.set_option('display.precision', 4)

    # ----------------------------
    # create data
    # ----------------------------
    # Create timeseries data
    x, y, f = make_timeseries()

    # Create exogenous variable
    exog = x

    # Variables.
    s, e = 50, 120

    # -------------------------------
    # create arima model
    # -------------------------------
    # This example shows how to use auto to find the best overall model using
    # a particular seletion criteria. It also demonstrates how to plot the 
    # resulting data for visualization purposes. Note that it only prints
    # the top best classifier according to the information criteria.

    # Find the best arima model (bruteforce).
    models, best = ARIMAWrapper(estimator=ARIMA) \
        .auto(endog=y[:80], ic='bic', max_ar=3,
              max_ma=3, max_d=3, return_fits=True)

    # Sort the list (from lower to upper)
    models.sort(key=lambda x: x.bic, reverse=False)

    # Summary
    summary = ARIMAWrapper().from_list_dataframe(models)

    # Show summary
    print("\nSummary:")
    print(summary[['arima-order',
                   'arima-trend', 
                   'arima-aic', 
                   'arima-bic']])

    # -------------------------------
    # plot results
    # -------------------------------
    # Create figure
    fig, axes = plt.subplots(3,3, figsize=(10,6))
    axes = axes.flatten()

    # Loop for the selected models
    for i,estimator in enumerate(models[:9]):

      # Show information
      print("%2d. Estimator (bic=%.2f): %s " % \
        (i, estimator.bic, estimator._identifier()))

      # Get the predictions
      preds = estimator.get_prediction(start=s, end=e, dynamic=False)

      # Plot truth values.
      axes[i].plot(y, color='#A6CEE3', alpha=0.5, marker='o',
                      markeredgecolor='k', markeredgewidth=0.5,
                      markersize=5, linewidth=0.75, label='Observed')

      # Plot forecasted values.
      axes[i].plot(preds[0,:], preds[1,:], color='#FF0000', alpha=1.00, 
                   linewidth=2.0, label=estimator._identifier())
  
      # Plot the confidence intervals.
      axes[i].fill_between(preds[0,:], preds[2,:], 
                                       preds[3,:], 
                                       color='#FF0000', 
                                       alpha=0.25)

      # Configure axes
      axes[i].legend(loc=3)
      axes[i].grid(True, linestyle='--', linewidth=0.25)

    # Set superior title
    plt.suptitle("Non-dynamic predictions for ARIMA")

    # Show
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.450 seconds)


.. _sphx_glr_download__examples_forecasting_plot_arima_search.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_arima_search.py <plot_arima_search.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_arima_search.ipynb <plot_arima_search.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
