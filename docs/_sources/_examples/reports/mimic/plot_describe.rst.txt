
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/reports/mimic/plot_describe.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_reports_mimic_plot_describe.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_reports_mimic_plot_describe.py:


Describe
-------------------

.. todo: Simplify and explain

.. GENERATED FROM PYTHON SOURCE LINES 7-129



.. image:: /_examples/reports/mimic/images/sphx_glr_plot_describe_001.png
    :alt: SPECIMEN
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Total cultures: 81267

    Specimens (proportions)
    URINE                                      5.8513e-01
    BLDCUL                                     1.3390e-01
    SWAB                                       1.2416e-01
    Staph aureus Screen                        3.5057e-02
    ABSCESS                                    3.0492e-02
    TISSUE                                     3.0098e-02
    CATHETER OR LINE                           9.4257e-03
    BILE                                       6.5586e-03
    FLUID,OTHER                                6.5463e-03
    MRSA SCREEN                                4.9467e-03
    PERITONEAL FLUID                           4.7498e-03
    ANORECTAL/VAGINAL CULTURE                  4.2945e-03
    FOREIGN BODY                               3.9992e-03
    BLOOD CULTURE - NEONATE                    3.1009e-03
    JOINT FLUID                                2.9286e-03
    PLEURAL FLUID                              2.5841e-03
    FLUID RECEIVED IN BLOOD CULTURE BOTTLES    2.3503e-03
    FOOT CULTURE                               2.0919e-03
    EYE                                        1.6120e-03
    URINE,KIDNEY                               1.2059e-03
    EAR                                        1.0829e-03
    STOOL                                      7.2600e-04
    CSF;SPINAL FLUID                           7.0139e-04
    Isolate                                    5.0451e-04
    DIALYSIS FLUID                             2.5841e-04
    SPUTUM                                     2.2149e-04
    ASPIRATE                                   1.5997e-04
    Foreign Body - Sonication Culture          1.3536e-04
    FLUID WOUND                                1.2305e-04
    Cipro Resistant Screen                     1.2305e-04
    BIOPSY                                     1.1075e-04
    BLOOD CULTURE ( MYCO/F LYTIC BOTTLE)       9.8441e-05
    PROSTHETIC JOINT FLUID                     7.3831e-05
    URINE,SUPRAPUBIC ASPIRATE                  7.3831e-05
    CORNEAL EYE SCRAPINGS                      7.3831e-05
    BRONCHOALVEOLAR LAVAGE                     6.1526e-05
    BRONCHIAL WASHINGS                         6.1526e-05
    THROAT FOR STREP                           6.1526e-05
    Stem Cell - Blood Culture                  4.9220e-05
    XXX                                        2.4610e-05
    Mini-BAL                                   1.2305e-05
    BLOOD                                      1.2305e-05
    STOOL (RECEIVED IN TRANSPORT SYSTEM)       1.2305e-05
    Name: specimen_code, dtype: float64

    Microorganisms (proportions)
    Escherichia coli              4.4540e-01
    Staph aureus coag +           1.4341e-01
    Klebsiella pneumoniae         1.0945e-01
    Proteus mirabilis             4.8555e-02
    Enterococcus sp.              4.6186e-02
                                     ...    
    Haemophilus parainfluenzae    1.1979e-06
    Propionibacterium species     1.1979e-06
    Cutibacterium avidum          1.1979e-06
    Leuconostoc species           1.1979e-06
    Prevotella species            1.1979e-06
    Name: microorganism_code, Length: 265, dtype: float64

    Antimicrobials (proportions)
    Gentamicin              0.0886
    Trimethoprim/sulfa      0.0775
    Ciprofloxacin           0.0620
    Ceftazidime             0.0618
    Tobramycin              0.0616
    Cefepime                0.0616
    Meropenem               0.0616
    Ceftriaxone             0.0573
    Nitrofurantoin          0.0547
    Ampicillin              0.0520
    Piperacillin/tazo       0.0518
    Ampicillin/sulbactam    0.0495
    Cefazolin               0.0466
    Vancomycin              0.0307
    Tetracycline            0.0292
    Levofloxacin            0.0280
    Erythromycin            0.0268
    Oxacillin               0.0266
    Clindamycin             0.0249
    Rifampin                0.0104
    Penicillin g            0.0096
    Cefuroxime              0.0072
    Piperacillin            0.0064
    Amikacin                0.0048
    Linezolid               0.0045
    Daptomycin              0.0026
    Imipenem                0.0017
    Name: antimicrobial_code, dtype: float64

    Pairs (proportions
    microorganism_code     antimicrobial_code  
    Escherichia coli       Ampicillin/sulbactam    3.4319e-02
                           Cefazolin               3.4115e-02
                           Trimethoprim/sulfa      3.4096e-02
                           Tobramycin              3.4088e-02
                           Gentamicin              3.4056e-02
                                                      ...    
    Escherichia vulneris   Cefepime                1.1979e-06
    Escherichia hermannii  Trimethoprim/sulfa      1.1979e-06
                           Tobramycin              1.1979e-06
                           Piperacillin/tazo       1.1979e-06
    Wautersiella falsenii  Trimethoprim/sulfa      1.1979e-06
    Length: 2342, dtype: float64


    Freqs:
    SENSITIVITY                                              P  intermediate  resistant  sensitive
    SPECIE                             ANTIBIOTIC                                                 
    Abiotrophia/granulicatella species Ampicillin          0.0           0.0        0.0        2.0
                                       Cefepime            0.0           0.0        1.0        1.0
                                       Ceftriaxone         0.0           1.0        3.0        6.0
                                       Ciprofloxacin       0.0           0.0        0.0        3.0
                                       Clindamycin         0.0           3.0        5.0       18.0
    ...                                                    ...           ...        ...        ...
    Wautersiella falsenii              Levofloxacin        0.0           0.0        0.0        1.0
                                       Meropenem           0.0           0.0        1.0        0.0
                                       Piperacillin/tazo   0.0           1.0        0.0        0.0
                                       Tobramycin          0.0           0.0        1.0        0.0
                                       Trimethoprim/sulfa  0.0           0.0        0.0        1.0

    [2342 rows x 4 columns]
    Count
    SPECIE                 ANTIBIOTIC          
    Escherichia coli       Ampicillin/sulbactam    28650.0
                           Cefazolin               28480.0
                           Trimethoprim/sulfa      28464.0
                           Tobramycin              28457.0
                           Gentamicin              28431.0
                                                    ...   
    Escherichia vulneris   Cefepime                    1.0
    Escherichia hermannii  Trimethoprim/sulfa          1.0
                           Tobramycin                  1.0
                           Piperacillin/tazo           1.0
    Wautersiella falsenii  Trimethoprim/sulfa          1.0
    Length: 2342, dtype: float64
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1583: MatplotlibDeprecationWarning: normalize=None does not normalize if the sum is less than 1 but this behavior is deprecated since 3.3 until two minor releases later. After the deprecation period the default value will be normalize=True. To prevent normalization pass normalize=False 
      results = ax.pie(y, labels=blabels, **kwds)






|

.. code-block:: default
   :lineno-start: 8


    # Import libraries
    import sys
    import glob
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import pyamr
    from pyamr.core.freq import Frequency
    from pyamr.datasets.load import load_data_mimic

    # Configure seaborn style (context=talk)
    sns.set(style="white")

    # Set matplotlib
    mpl.rcParams['xtick.labelsize'] = 9
    mpl.rcParams['ytick.labelsize'] = 9
    mpl.rcParams['axes.titlesize'] = 11
    mpl.rcParams['legend.fontsize'] = 9

    # Pandas configuration
    pd.set_option('display.max_colwidth', 40)
    pd.set_option('display.width', 300)
    pd.set_option('display.precision', 4)

    # Numpy configuration
    np.set_printoptions(precision=2)

    # -------------------------
    # Constants
    # -------------------------
    # Replace codes
    replace_codes = {
      '9MRSN': 'MRSCUL',
      'URINE CULTURE': 'URICUL',
      'WOUND CULTURE': 'WOUCUL',
      'BLOOD CULTURE': 'BLDCUL',
      'SPUTUM CULTURE': 'SPTCUL',
      'CSF CULTURE': 'CSFCUL',
      'EYE CULTURE': 'EYECUL',
      'GENITALCUL': 'GENCUL',
      'NEONATAL SCREEN': 'NEOCUL',
    }

    # ----------------------------------------------------------
    #                       Main
    # ----------------------------------------------------------
    # Load data
    data, antibiotics, organisms = load_data_mimic()

    # Replace
    data.specimen_code = \
        data.specimen_code.replace(replace_codes)

    # Drop duplicates
    data = data.drop_duplicates()

    # The total number of cultures
    ncultures = data.laboratory_number.nunique()

    # The percentage of each specimen
    pspecimens = data \
        .groupby('laboratory_number').head(1) \
        .specimen_code.value_counts(normalize=True)

    # The percentages of each organism
    pmicroorganisms = data \
        .microorganism_code \
        .value_counts(normalize=True)

    # The percentages of each antimicrobial
    pantimicrobials = data \
        .antimicrobial_code \
        .value_counts(normalize=True)

    # The percentages of (orgnaism, antimicrobial) pairs
    ppairs = data[['microorganism_code', 'antimicrobial_code']]
    ppairs = ppairs.value_counts(normalize=True)

    # Show
    print("\nTotal cultures: %s" % ncultures)
    print("\nSpecimens (proportions)")
    print(pspecimens)
    print("\nMicroorganisms (proportions)")
    print(pmicroorganisms)
    print("\nAntimicrobials (proportions)")
    print(pantimicrobials)
    print("\nPairs (proportions")
    print(ppairs)

    # --------------------
    # Compute Frequencies
    # --------------------
    # Create instance
    freq = Frequency(column_antibiotic='antimicrobial_code',
                     column_organism='microorganism_code',
                     column_date='date_received',
                     column_outcome='sensitivity')

    # Compute frequencies overall
    freq_pairs = freq.compute(data, strategy='overall',
                                    by_category='pairs')

    freq_orgs = freq.compute(data, strategy='overall',
                                   by_category='organisms')

    freq_abxs = freq.compute(data, strategy='overall',
                                   by_category='organisms')

    print("\n\nFreqs:")
    print(freq_pairs)
    print("Count")
    print(freq_pairs.sum(axis=1).sort_values(ascending=False))



    pspecimens.plot(kind='pie', ylabel='')
    plt.suptitle('SPECIMEN')

    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.950 seconds)


.. _sphx_glr_download__examples_reports_mimic_plot_describe.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_describe.py <plot_describe.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_describe.ipynb <plot_describe.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
