
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\reports\nhs\plot_antibiogram.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_reports_nhs_plot_antibiogram.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_reports_nhs_plot_antibiogram.py:


SARI - Antibiogram
------------------

.. todo:: Explain and Simplify

.. todo: Frequency might not be working?
         Frequency can be computed as sum of columns.

.. GENERATED FROM PYTHON SOURCE LINES 11-122



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_001.png
          :alt: Antibiogram (BLDCUL)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_002.png
          :alt: Antibiogram (GUMCUL)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_003.png
          :alt: Antibiogram (SPTCUL)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_004.png
          :alt: Antibiogram (URICUL)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_005.png
          :alt: Antibiogram (WOUCUL)
          :class: sphx-glr-multi-img





.. code-block:: default
   :lineno-start: 12


    # Libraries
    import sys
    import glob
    import numpy as np 
    import pandas as pd 
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import own libraries
    from pyamr.core.freq import Frequency
    from pyamr.core.sari import SARI
    from pyamr.datasets.load import load_data_nhs

    # -------------------------
    # Configuration
    # -------------------------
    # Configure seaborn style (context=talk)
    sns.set(style="white")

    # Set matplotlib
    mpl.rcParams['xtick.labelsize'] = 9
    mpl.rcParams['ytick.labelsize'] = 9
    mpl.rcParams['axes.titlesize'] = 11
    mpl.rcParams['legend.fontsize'] = 9

    # Pandas configuration
    pd.set_option('display.max_colwidth', 40)
    pd.set_option('display.width', 300)
    pd.set_option('display.precision', 4)

    # Numpy configuration
    np.set_printoptions(precision=2)

    # --------------------------------------------------------------------
    #                               Main
    # --------------------------------------------------------------------
    # Load data
    data, antibiotics, organisms = load_data_nhs()

    # Count records per specimen code
    specimen_code_count = data \
        .groupby('laboratory_number').head(1) \
        .specimen_code.value_counts(normalize=True) \
        .sort_values(ascending=False)

    # Filter most frequent specimens
    data = data[data.specimen_code.isin( \
        specimen_code_count.index.values[:5])]

    # Loop for each specimen
    for specimen_code, df in data.groupby(by='specimen_code'):

        # -------------------------------------------
        # Compute Freq and SARI
        # -------------------------------------------
        # Create instance
        freq = Frequency(column_antibiotic='antimicrobial_code',
                         column_organism='microorganism_code',
                         column_date='date_received',
                         column_outcome='sensitivity')

        # Compute frequencies (overall)
        freq_overall = freq.compute(df, by_category='pairs')

        # Filter
        freq_overall = freq_overall[freq_overall.sum(axis=1) > 100]

        # Compute SARI
        sari_overall = SARI(strategy='hard').compute(freq_overall)

        # ------------
        # Plot Heatmap
        # ------------
        # Create matrix
        matrix = sari_overall[['sari']]
        matrix = matrix.unstack() * 100
        matrix.columns = matrix.columns.droplevel()

        # Create figure
        f, ax = plt.subplots(1, 1, figsize=(12, 12))

        # Create colormap
        cmap = sns.color_palette("Reds", desat=0.5, n_colors=10)

        # Specify cbar axes
        #cbar_ax = f.add_axes([.925, .3, .05, .3])

        # Plot
        ax = sns.heatmap(data=matrix, annot=True, fmt=".0f",
                         annot_kws={'fontsize': 7}, cmap=cmap,
                         linewidth=0.5, vmin=0, vmax=100, ax=ax,
                         xticklabels=1, yticklabels=1)
                         # cbar_ax=cbar_ax)

        # Configure axes
        ax.set(aspect="equal")

        # Set rotation
        plt.yticks(rotation=0)

        # Add title
        plt.suptitle("Antibiogram (%s)" % specimen_code,
            fontsize=15)

        # Tight layout
        plt.tight_layout()
        #plt.subplots_adjust(right=0.91)

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.889 seconds)


.. _sphx_glr_download__examples_reports_nhs_plot_antibiogram.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_antibiogram.py <plot_antibiogram.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_antibiogram.ipynb <plot_antibiogram.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
