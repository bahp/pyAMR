
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/reports/nhs/plot_describe.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_reports_nhs_plot_describe.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_reports_nhs_plot_describe.py:


Describe
-------------------

.. todo: Simplify and explain

.. GENERATED FROM PYTHON SOURCE LINES 7-136




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Total cultures: 864

    Specimens (proportions)
    URICUL    0.2905
    WOUCUL    0.2234
    BLDCUL    0.1042
    SPTCUL    0.0926
    XINCUL    0.0440
    URNCUL    0.0370
    MRSCUL    0.0243
    TIPCUL    0.0197
    T&FCUL    0.0197
    EYECUL    0.0185
    ENTCUL    0.0174
    VAGCUL    0.0162
    NEOCUL    0.0139
    9TIPCS    0.0081
    TISCUL    0.0081
    MNGCUL    0.0069
    BFLCUL    0.0058
    LVSCUL    0.0046
    GNGCUL    0.0046
    9EARCS    0.0035
    9THRCS    0.0035
    ETTCUL    0.0035
    CSFCUL    0.0035
    DRFCUL    0.0023
    9ETTCS    0.0023
    9BWCS     0.0023
    9MRSG     0.0023
    PSWCUL    0.0023
    CROCUL    0.0023
    PUSCUL    0.0023
    9PENCS    0.0012
    FAECUL    0.0012
    EARCUL    0.0012
    BALCUL    0.0012
    9PUSCS    0.0012
    SKNCUL    0.0012
    9DERCS    0.0012
    SEMCUL    0.0012
    PDFCUL    0.0012
    Name: specimen_code, dtype: float64

    Microorganisms (proportions)
    SAUR           0.2645
    ECOL           0.1868
    CNS            0.0835
    KPNE           0.0613
    PAER           0.0536
                    ...  
    GHAEM          0.0003
    CAMPY          0.0003
    A_ISOLATED     0.0002
    PANA           0.0001
    A_MANAEROBE    0.0001
    Name: microorganism_code, Length: 63, dtype: float64

    Antimicrobials (proportions)
    ACIP    0.0751
    AGEN    0.0711
    ATRI    0.0633
    AAUG    0.0442
    ATET    0.0394
             ...  
    AITR    0.0001
    ACLZ    0.0001
    ADAP    0.0001
    ABAC    0.0001
    APCZ    0.0001
    Name: antimicrobial_code, Length: 67, dtype: float64

    Pairs (proportions
    microorganism_code  antimicrobial_code
    SAUR                AMET                  0.0224
                        ACLI                  0.0212
                        APEN                  0.0212
                        AERY                  0.0212
                        AFUS                  0.0212
                                               ...  
    EFAS                ACHL                  0.0001
    ECLO                AFOS                  0.0001
                        ACZA                  0.0001
    EAER                AESBL                 0.0001
    VIRST               ATET                  0.0001
    Length: 853, dtype: float64


    Freqs:
    SENSITIVITY        highly resistant  intermediate  not done  resistant  sensitive
    SPECIE ANTIBIOTIC                                                                
    ABAU   AAMI                     0.0           0.0       0.0        4.0        7.0
           AAMO                     0.0           0.0       0.0        7.0        0.0
           AAMPC                    0.0           0.0       0.0        1.0        0.0
           AAUG                     0.0           0.0       0.0        5.0        2.0
           AAZT                     0.0           0.0       0.0        2.0        0.0
    ...                             ...           ...       ...        ...        ...
    VIRST  ACLI                     0.0           0.0       0.0        0.0        1.0
           AERY                     0.0           0.0       0.0        1.0        0.0
           AMLS                     0.0           0.0       0.0        1.0        0.0
           APEN                     0.0           0.0       0.0        0.0        1.0
           ATET                     0.0           0.0       0.0        0.0        1.0

    [853 rows x 5 columns]
    Count
    SPECIE  ANTIBIOTIC
    SAUR    AMET          220.0
            ACLI          208.0
            APEN          208.0
            AERY          208.0
            AFUS          208.0
                          ...  
    EFAS    ACHL            1.0
    ECLO    AFOS            1.0
            ACZA            1.0
    EAER    AESBL           1.0
    VIRST   ATET            1.0
    Length: 853, dtype: float64






|

.. code-block:: default
   :lineno-start: 8


    # Import libraries
    import sys
    import glob
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import pyamr
    from pyamr.core.freq import Frequency

    # Configure seaborn style (context=talk)
    sns.set(style="white")

    # Set matplotlib
    mpl.rcParams['xtick.labelsize'] = 9
    mpl.rcParams['ytick.labelsize'] = 9
    mpl.rcParams['axes.titlesize'] = 11
    mpl.rcParams['legend.fontsize'] = 9

    # Pandas configuration
    pd.set_option('display.max_colwidth', 40)
    pd.set_option('display.width', 300)
    pd.set_option('display.precision', 4)

    # Numpy configuration
    np.set_printoptions(precision=2)

    # -------------------------
    # Constants
    # -------------------------
    # Replace codes
    replace_codes = {
      '9MRSN':'MRSCUL',
      'URINE CULTURE': 'URICUL',
      'WOUND CULTURE': 'WOUCUL',
      'BLOOD CULTURE': 'BLDCUL',
      'SPUTUM CULTURE': 'SPTCUL',
      'CSF CULTURE': 'CSFCUL',
      'EYE CULTURE': 'EYECUL',
      'GENITALCUL': 'GENCUL',
      'NEONATAL SCREEN': 'NEOCUL',
    }

    # Interesting columns
    usecols = ['date_received',
               'laboratory_number',
               'patient_id',
               'specimen_code',
               'microorganism_code',
               'antimicrobial_code',
               'sensitivity']

    # Path
    path = '../../../pyamr/datasets/microbiology/nhs/aggregated/susceptibility-v0.0.1/'

    # -------------------------
    # Main
    # -------------------------
    # Load all files
    data = pd.concat([  \
        pd.read_csv(f, parse_dates=['date_received'],
            usecols=usecols, nrows=1000)
                for f in glob.glob(path + "/susceptibility-*.csv")])

    # Replace
    data.specimen_code = \
        data.specimen_code.replace(replace_codes)

    # Drop duplicates
    data = data.drop_duplicates()

    # The total number of cultures
    ncultures = data.laboratory_number.nunique()

    # The percentage of each specimen
    pspecimens = data \
        .groupby('laboratory_number').head(1) \
        .specimen_code.value_counts(normalize=True)

    # The percentages of each organism
    pmicroorganisms = data \
        .microorganism_code \
        .value_counts(normalize=True)

    # The percentages of each antimicrobial
    pantimicrobials = data \
        .antimicrobial_code \
        .value_counts(normalize=True)

    # The percentages of (orgnaism, antimicrobial) pairs
    ppairs = data[['microorganism_code', 'antimicrobial_code']]
    ppairs = ppairs.value_counts(normalize=True)

    # Show
    print("\nTotal cultures: %s" % ncultures)
    print("\nSpecimens (proportions)")
    print(pspecimens)
    print("\nMicroorganisms (proportions)")
    print(pmicroorganisms)
    print("\nAntimicrobials (proportions)")
    print(pantimicrobials)
    print("\nPairs (proportions")
    print(ppairs)

    # --------------------
    # Compute Frequencies
    # --------------------
    # Create instance
    freq = Frequency(column_antibiotic='antimicrobial_code',
                     column_organism='microorganism_code',
                     column_date='date_received',
                     column_outcome='sensitivity')

    # Compute frequencies overall
    freq_pairs = freq.compute(data, strategy='overall',
                                    by_category='pairs')

    freq_orgs = freq.compute(data, strategy='overall',
                                   by_category='organisms')

    freq_abxs = freq.compute(data, strategy='overall',
                                   by_category='organisms')

    print("\n\nFreqs:")
    print(freq_pairs)
    print("Count")
    print(freq_pairs.sum(axis=1).sort_values(ascending=False))

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.146 seconds)


.. _sphx_glr_download__examples_reports_nhs_plot_describe.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_describe.py <plot_describe.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_describe.ipynb <plot_describe.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
