
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/reports/nhs/plot_antibiogram_relmap.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_reports_nhs_plot_antibiogram_relmap.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_reports_nhs_plot_antibiogram_relmap.py:


SARI - Antibiogram (relmap)
---------------------------

.. todo:: Explain and Simplify

.. todo: Frequency might not be working?
         Frequency can be computed as sum of columns.

.. GENERATED FROM PYTHON SOURCE LINES 11-218



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_relmap_001.png
          :alt: BLDCUL, Antibiogram (with frequency)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_relmap_002.png
          :alt: GUMCUL, Antibiogram (with frequency)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_relmap_003.png
          :alt: SPTCUL, Antibiogram (with frequency)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_relmap_004.png
          :alt: URICUL, Antibiogram (with frequency)
          :class: sphx-glr-multi-img

    *

      .. image:: /_examples/reports/nhs/images/sphx_glr_plot_antibiogram_relmap_005.png
          :alt: WOUCUL, Antibiogram (with frequency)
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Data:
    SENSITIVITY SPECIE ANTIBIOTIC  fix  hide  highly resistant  intermediate  not done  resistant  sensitive    sari   freq microorganism_genus antimicrobial_class
    0              AHS       ACLI  0.0   0.0               0.0           0.0       0.0       51.0      296.0  0.1470  347.0       Streptococcus          Macrolides
    1              AHS       AERY  0.0   0.0               0.0           1.0       0.0      180.0      234.0  0.4361  415.0       Streptococcus          Macrolides
    2              AHS       APEN  0.0   0.0               0.0          11.0       0.0       51.0      354.0  0.1490  416.0       Streptococcus         Penicillins
    3              AHS       ATEI  0.0   0.0               0.0           0.0       0.0        6.0      398.0  0.0149  404.0       Streptococcus        Glycopeptide
    4              AHS       ATET  0.0   0.0               0.0           0.0       0.0       82.0      262.0  0.2384  344.0       Streptococcus       Tetracyclines
    ..             ...        ...  ...   ...               ...           ...       ...        ...        ...     ...    ...                 ...                 ...
    263           SPNE       ALEV  0.0   0.0               0.0           0.0       0.0        3.0      317.0  0.0094  320.0       Streptococcus    Fluoroquinolones
    264           SPNE       AMOX  0.0   0.0               0.0           1.0       0.0        5.0      306.0  0.0192  312.0       Streptococcus    Fluoroquinolones
    265           SPNE       APEN  0.0   6.0               0.0          14.0       0.0       18.0      352.0  0.0833  390.0       Streptococcus         Penicillins
    266           SPNE       ATET  0.0   0.0               0.0           0.0       0.0       29.0      350.0  0.0765  379.0       Streptococcus       Tetracyclines
    267           SPNE       AVAN  0.0   0.0               0.0           0.0       0.0        0.0      358.0  0.0000  358.0       Streptococcus        Glycopeptide

    [268 rows x 13 columns]

    Columns:
    Index(['SPECIE', 'ANTIBIOTIC', 'fix', 'hide', 'highly resistant', 'intermediate', 'not done', 'resistant', 'sensitive', 'sari', 'freq', 'microorganism_genus', 'antimicrobial_class'], dtype='object', name='SENSITIVITY')

    Frequencies:
    count     268.0000
    mean      773.2500
    std      1254.2408
    min       101.0000
    25%       152.7500
    50%       270.0000
    75%       617.7500
    max      5781.0000
    Name: freq, dtype: float64

    Data:
    SENSITIVITY SPECIE ANTIBIOTIC  hide  intermediate  not done  resistant  sensitive    sari     freq microorganism_genus antimicrobial_class
    0             NGON       AAZI  10.0           3.0       5.0       87.0    15620.0  0.0057  15725.0           Neisseria          Macrolides
    1             NGON       ACIP   0.0           0.0       4.0     6727.0    10461.0  0.3914  17192.0           Neisseria    Fluoroquinolones
    2             NGON       ACIX  42.0           0.0       4.0       13.0    14979.0  0.0009  15038.0           Neisseria      Cephalosporins
    3             NGON      ACONE  45.0           1.0       4.0        5.0    15012.0  0.0004  15067.0           Neisseria      Cephalosporins
    4             NGON       ACXM   3.0           0.0       1.0      356.0    10155.0  0.0339  10515.0           Neisseria      Cephalosporins
    5             NGON       ANAL   3.0           2.0       1.0     6019.0     9739.0  0.3820  15764.0           Neisseria    Fluoroquinolones
    6             NGON       ASPE   0.0           0.0       4.0       10.0    15741.0  0.0006  15755.0           Neisseria                 NaN
    7             NGON       ATET   0.0           0.0       0.0     1093.0      334.0  0.7659   1427.0           Neisseria       Tetracyclines
    8             NMEN       AAZI   0.0           0.0       0.0        3.0      202.0  0.0146    205.0           Neisseria          Macrolides
    9             NMEN       ACIP   0.0           0.0       0.0       20.0      223.0  0.0823    243.0           Neisseria    Fluoroquinolones
    10            NMEN       ACIX   0.0           0.0       0.0        0.0      201.0  0.0000    201.0           Neisseria      Cephalosporins
    11            NMEN      ACONE   0.0           0.0       0.0        0.0      204.0  0.0000    204.0           Neisseria      Cephalosporins
    12            NMEN       ACXM   0.0           0.0       0.0        1.0      121.0  0.0082    122.0           Neisseria      Cephalosporins
    13            NMEN       ANAL   0.0           0.0       0.0       13.0      213.0  0.0575    226.0           Neisseria    Fluoroquinolones
    14            NMEN       ASPE   0.0           0.0       0.0        0.0      211.0  0.0000    211.0           Neisseria                 NaN

    Columns:
    Index(['SPECIE', 'ANTIBIOTIC', 'hide', 'intermediate', 'not done', 'resistant', 'sensitive', 'sari', 'freq', 'microorganism_genus', 'antimicrobial_class'], dtype='object', name='SENSITIVITY')

    Frequencies:
    count       15.0000
    mean      7193.0000
    std       7697.5253
    min        122.0000
    25%        208.0000
    50%       1427.0000
    75%      15396.0000
    max      17192.0000
    Name: freq, dtype: float64

    Data:
    SENSITIVITY SPECIE ANTIBIOTIC  hide  intermediate  not done  resistant  sensitive    sari    freq microorganism_genus antimicrobial_class
    0             ABAU       AAMI   0.0           0.0       0.0       71.0       71.0  0.5000   142.0       Acinetobacter     Aminoglycosides
    1             ABAU       AAMO   0.0           0.0       0.0      117.0        2.0  0.9832   119.0       Acinetobacter    Aminopenicillins
    2             ABAU       AAUG   0.0           1.0       0.0      106.0       13.0  0.8917   120.0       Acinetobacter                 NaN
    3             ABAU       ACAZ   0.0          10.0       0.0      107.0        4.0  0.9669   121.0       Acinetobacter      Cephalosporins
    4             ABAU       ACIP   0.0           2.0       0.0      105.0       50.0  0.6815   157.0       Acinetobacter    Fluoroquinolones
    ..             ...        ...   ...           ...       ...        ...        ...     ...     ...                 ...                 ...
    365           SPNE       AMOX   0.0           0.0       0.0       10.0     1113.0  0.0089  1123.0       Streptococcus    Fluoroquinolones
    366           SPNE       AOXA   7.0           1.0       0.0       26.0       69.0  0.2812   103.0       Streptococcus         Penicillins
    367           SPNE       APEN   0.0         130.0       2.0      108.0     1035.0  0.1870  1275.0       Streptococcus         Penicillins
    368           SPNE       ATET   0.0           0.0       0.0      322.0      973.0  0.2486  1295.0       Streptococcus       Tetracyclines
    369           SPNE       AVAN   0.0           0.0       0.0        0.0     1132.0  0.0000  1132.0       Streptococcus        Glycopeptide

    [370 rows x 11 columns]

    Columns:
    Index(['SPECIE', 'ANTIBIOTIC', 'hide', 'intermediate', 'not done', 'resistant', 'sensitive', 'sari', 'freq', 'microorganism_genus', 'antimicrobial_class'], dtype='object', name='SENSITIVITY')

    Frequencies:
    count     370.0000
    mean      645.1000
    std       947.0264
    min       101.0000
    25%       150.0000
    50%       331.0000
    75%       546.7500
    max      5356.0000
    Name: freq, dtype: float64

    Data:
    SENSITIVITY SPECIE ANTIBIOTIC  hide  intermediate  not done  resistant  sensitive    sari    freq microorganism_genus antimicrobial_class
    0             ABAU       ACIP   0.0           3.0       0.0       32.0       67.0  0.3431   102.0       Acinetobacter    Fluoroquinolones
    1            ACINE       AAMI   0.0           0.0       0.0        5.0      105.0  0.0455   110.0       Acinetobacter     Aminoglycosides
    2            ACINE       AAUG   0.0           0.0       2.0       10.0      116.0  0.0794   128.0       Acinetobacter                 NaN
    3            ACINE      ACELX   0.0           0.0       2.0       59.0       65.0  0.4758   126.0       Acinetobacter      Cephalosporins
    4            ACINE       ACIP   0.0           4.0       0.0       11.0      163.0  0.0843   178.0       Acinetobacter    Fluoroquinolones
    ..             ...        ...   ...           ...       ...        ...        ...     ...     ...                 ...                 ...
    393           SSAP       APEN   1.0           0.0       0.0      525.0       96.0  0.8454   622.0      Staphylococcus         Penicillins
    394           SSAP       ARIF   0.0           0.0       0.0        4.0      139.0  0.0280   143.0      Staphylococcus                 NaN
    395           SSAP       ATET   2.0           0.0       0.0       40.0      378.0  0.0957   420.0      Staphylococcus       Tetracyclines
    396           SSAP       ATRI   0.0           0.0       0.0       71.0     1085.0  0.0614  1156.0      Staphylococcus                 NaN
    397           SSAP       AVAN   0.0           0.0       0.0        2.0      129.0  0.0153   131.0      Staphylococcus        Glycopeptide

    [398 rows x 11 columns]

    Columns:
    Index(['SPECIE', 'ANTIBIOTIC', 'hide', 'intermediate', 'not done', 'resistant', 'sensitive', 'sari', 'freq', 'microorganism_genus', 'antimicrobial_class'], dtype='object', name='SENSITIVITY')

    Frequencies:
    count      398.0000
    mean      2630.1181
    std       9791.2119
    min        102.0000
    25%        214.0000
    50%        541.0000
    75%       1150.5000
    max      79771.0000
    Name: freq, dtype: float64

    Data:
    SENSITIVITY SPECIE ANTIBIOTIC  hide  highly resistant  intermediate  not done  resistant  sensitive    sari   freq microorganism_genus antimicrobial_class
    0             ABAU       AAMI   0.0               0.0           7.0       0.0       84.0      188.0  0.3262  279.0       Acinetobacter     Aminoglycosides
    1             ABAU       AAMO   0.0               0.0           0.0       0.0      265.0        6.0  0.9779  271.0       Acinetobacter    Aminopenicillins
    2             ABAU       AAUG   0.0               0.0           1.0       0.0      213.0       53.0  0.8015  267.0       Acinetobacter                 NaN
    3             ABAU       AAZT   0.0               0.0           1.0       0.0      169.0        9.0  0.9497  179.0       Acinetobacter         Monobactams
    4             ABAU       ACAZ   0.0               0.0          10.0       0.0      243.0       20.0  0.9267  273.0       Acinetobacter      Cephalosporins
    ..             ...        ...   ...               ...           ...       ...        ...        ...     ...    ...                 ...                 ...
    502           SPNE       ALEV   0.0               0.0           0.0       0.0        0.0      126.0  0.0000  126.0       Streptococcus    Fluoroquinolones
    503           SPNE       AMOX   0.0               0.0           0.0       0.0        0.0      126.0  0.0000  126.0       Streptococcus    Fluoroquinolones
    504           SPNE       APEN   0.0               0.0           4.0       0.0        5.0      132.0  0.0638  141.0       Streptococcus         Penicillins
    505           SPNE       ATET   0.0               0.0           0.0       0.0       19.0      124.0  0.1329  143.0       Streptococcus       Tetracyclines
    506           SPNE       AVAN   0.0               0.0           0.0       0.0        0.0      126.0  0.0000  126.0       Streptococcus        Glycopeptide

    [507 rows x 12 columns]

    Columns:
    Index(['SPECIE', 'ANTIBIOTIC', 'hide', 'highly resistant', 'intermediate', 'not done', 'resistant', 'sensitive', 'sari', 'freq', 'microorganism_genus', 'antimicrobial_class'], dtype='object', name='SENSITIVITY')

    Frequencies:
    count      507.0000
    mean      1786.6469
    std       5762.5748
    min        101.0000
    25%        205.5000
    50%        364.0000
    75%       1018.0000
    max      40916.0000
    Name: freq, dtype: float64






|

.. code-block:: default
   :lineno-start: 12


    # Libraries
    import sys
    import glob
    import numpy as np 
    import pandas as pd 
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import own libraries
    from pyamr.core.freq import Frequency
    from pyamr.core.sari import SARI
    from pyamr.datasets.load import load_data_nhs

    # -------------------------
    # Configuration
    # -------------------------
    # Configure seaborn style (context=talk)
    sns.set(style="white")

    # Set matplotlib
    mpl.rcParams['xtick.labelsize'] = 9
    mpl.rcParams['ytick.labelsize'] = 9
    mpl.rcParams['axes.titlesize'] = 11
    mpl.rcParams['legend.fontsize'] = 9

    # Pandas configuration
    pd.set_option('display.max_colwidth', 40)
    pd.set_option('display.width', 300)
    pd.set_option('display.precision', 4)

    # Numpy configuration
    np.set_printoptions(precision=2)


    # ------------------------------------------------------------
    # Methods
    # ------------------------------------------------------------
    def get_category_colors(index, category, cmap='hls'):
        """This method creates the colors for the different elements in
        categorical feature vector.

        Parameters
        ----------
        values : array-like
            The vector with the categorical values

        cmap: string-like
            The colormap to use

        default: string-like
            The color to be used for the first value. Note that this
            value needs to appear first on the the sorted list, as such
            it is recommended to set is as _default.

        Returns
        -------
        """
        # Get categories
        categories = index.get_level_values(category)
        # Get unique elements
        unique = np.unique(categories)
        # Create the palette
        palette = sns.color_palette(cmap, desat=0.5, n_colors=unique.shape[0])
        # Create mappers from category to color
        mapper = dict(zip(map(str, unique), palette))
        # Create list with colors for each category
        colors = pd.Series(categories, index=index).map(mapper)
        # Return
        return colors


    def create_mapper(dataframe, column_key, column_value):
      """This method constructs a mapper

      Parameters
      ----------
      dataframe: dataframe-like
        The dataframe from which the columns are extracted

      column_key: string-like
        The name of the column with the values for the keys of the mapper

      column_value: string-like
        The name of the column with the values for the values of the mapper

      Returns
      -------
      dictionary
      """
      dataframe = dataframe[[column_key, column_value]]
      dataframe = dataframe.drop_duplicates()
      return dict(zip(dataframe[column_key], dataframe[column_value]))


    # --------------------------------------------------------------------
    #                               Main
    # --------------------------------------------------------------------
    # Load data
    data, antibiotics, organisms = load_data_nhs()

    # Count records per specimen code
    specimen_code_count = data \
        .groupby('laboratory_number').head(1) \
        .specimen_code.value_counts(normalize=True) \
        .sort_values(ascending=False)

    # Filter most frequent specimens
    data = data[data.specimen_code.isin( \
        specimen_code_count.index.values[:5])]

    # Loop for each specimen
    for specimen_code, df in data.groupby(by='specimen_code'):

        # -------------------------------------------
        # Compute Freq and SARI
        # -------------------------------------------
        # Create instance
        freq = Frequency(column_antibiotic='antimicrobial_code',
                         column_organism='microorganism_code',
                         column_date='date_received',
                         column_outcome='sensitivity')

        # Compute frequencies (overall)
        freq_overall = freq.compute(df, by_category='pairs')

        # Filter
        freq_overall = freq_overall[freq_overall.sum(axis=1) > 100]

        # Compute SARI
        sari_overall = SARI(strategy='hard').compute(freq_overall)

        # -------------------------------
        # Create matrix
        # -------------------------------
        # Create mappers
        abx_map = create_mapper(antibiotics, 'antimicrobial_code', 'category')
        org_map = create_mapper(organisms, 'microorganism_code', 'genus')

        # Create matrix
        matrix = sari_overall
        matrix['freq'] = freq_overall.sum(axis=1)
        matrix = matrix.reset_index()
        matrix['microorganism_genus'] = matrix.SPECIE.map(org_map)
        matrix['antimicrobial_class'] = matrix.ANTIBIOTIC.map(abx_map)

        # Show
        print("\nData:")
        print(matrix)
        print("\nColumns:")
        print(matrix.columns)
        print("\nFrequencies:")
        print(matrix.freq.describe())

        # Create colormap
        cmap = sns.color_palette("Reds", desat=0.5, n_colors=10)

        # Format frequency
        #matrix.freq = np.log(matrix.freq)
        matrix.freq = matrix.freq / 100

        # Configuration
        sizes = (
            matrix.freq.min(),
            matrix.freq.max()
        )

        size_norm = (
            matrix.freq.min(),
            matrix.freq.max()
        )

        # Plot
        g = sns.relplot(data=matrix, x='SPECIE',
                        y='ANTIBIOTIC', hue="sari", size="freq",
                        palette='Reds', hue_norm=(0, 1), edgecolor="gray",
                        linewidth=0.5, sizes=sizes,  #size_norm=size_norm,
                        dashes=True, legend='brief', height=10)

        # Configure plot
        g.set(xlabel="Antimicrobial",
              ylabel="Microorganism",
              title='Antibiogram (with frequency)')#,
              #aspect="equal")
        g.despine(left=True, bottom=True)
        g.ax.margins(.1)

        # Configure xticks
        for label in g.ax.get_xticklabels():
            label.set_rotation(90)

        # Configure legend
        for artist in g.legend.legendHandles:
            artist.set_edgecolor("k")
            artist.set_linewidth(0.5)

        # Suptitle
        plt.suptitle(specimen_code)

        # Add grid lines.
        # plt.grid(linestyle='-', linewidth=0.5, color='.7')

        # Adjust
        plt.tight_layout()

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.585 seconds)


.. _sphx_glr_download__examples_reports_nhs_plot_antibiogram_relmap.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_antibiogram_relmap.py <plot_antibiogram_relmap.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_antibiogram_relmap.ipynb <plot_antibiogram_relmap.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
