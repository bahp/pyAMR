
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\indexes\plot_acsi_b_mimic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_indexes_plot_acsi_b_mimic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_indexes_plot_acsi_b_mimic.py:


``ACSI`` - Example using ``MIMIC``
----------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 6-44

.. code-block:: default
   :lineno-start: 7


    # Libraries
    import sys
    import warnings
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib as mpl

    from pathlib import Path

    try:
        __file__
        TERMINAL = True
    except:
        TERMINAL = False


    # Configure seaborn style (context=talk)
    sns.set_theme(style="white")

    # Configure warnings
    warnings.filterwarnings("ignore",
        category=pd.errors.DtypeWarning)

    # -------------------------------------------------------
    # Constants
    # -------------------------------------------------------
    # Rename columns for susceptibility
    rename_susceptibility = {
        'chartdate': 'DATE',
        'micro_specimen_id': 'LAB_NUMBER',
        'spec_type_desc': 'SPECIMEN',
        'org_name': 'MICROORGANISM',
        'ab_name': 'ANTIMICROBIAL',
        'interpretation': 'SENSITIVITY'
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Let's load the ``susceptibility`` test data

.. GENERATED FROM PYTHON SOURCE LINES 46-68

.. code-block:: default
   :lineno-start: 48



    # -----------------------------
    # Load susceptibility test data
    # -----------------------------
    nrows=1000

    # Helper
    subset = rename_susceptibility.values()

    # Load data
    path = Path('../../pyamr/datasets/mimic')
    data1 = pd.read_csv(path / 'susceptibility.csv', nrows=nrows)

    # Rename columns
    data1 = data1.rename(columns=rename_susceptibility)

    # Format data
    data1 = data1[subset]
    data1 = data1.dropna(subset=subset, how='any')
    data1.DATE = pd.to_datetime(data1.DATE)








.. GENERATED FROM PYTHON SOURCE LINES 69-71

.. code-block:: default
   :lineno-start: 69

    data1.head(5)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>DATE</th>
          <th>LAB_NUMBER</th>
          <th>SPECIMEN</th>
          <th>MICROORGANISM</th>
          <th>ANTIMICROBIAL</th>
          <th>SENSITIVITY</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHI...</td>
          <td>AMPICILLIN</td>
          <td>S</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHI...</td>
          <td>CEFAZOLIN</td>
          <td>S</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHI...</td>
          <td>TRIMETHOPR...</td>
          <td>S</td>
        </tr>
        <tr>
          <th>5</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHI...</td>
          <td>NITROFURAN...</td>
          <td>S</td>
        </tr>
        <tr>
          <th>6</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHI...</td>
          <td>GENTAMICIN</td>
          <td>S</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 72-78

Let's compute the ``ACSI`` and return the combinations.

.. note:: This step is quite computationally expensive since it has to create all
          possible antimicrobial combinations within each isolate in the
          susceptibility test data. Thus, it is recommended to save the results
          for future analysis and/or visualisation.

.. GENERATED FROM PYTHON SOURCE LINES 78-107

.. code-block:: default
   :lineno-start: 80



    # Libraries
    from pyamr.core.acsi import ACSI

    # Compute index
    contingency, combinations = \
        ACSI().compute(data1,
        groupby=[
            'DATE',
            'SPECIMEN',
            'MICROORGANISM'
        ],
        return_combinations=True)

    # Save
    #contingency.to_csv('contingency_%s.csv' % nrows)
    #combinations.to_csv('combinations_%s.csv' % nrows)

    # Display
    print("\nCombinations:")
    print(combinations)
    print("\nContingency:")
    print(contingency)









.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    c:\users\kelda\desktop\repositories\github\pyamr\main\pyamr\core\acsi.py:120: RuntimeWarning:

    invalid value encountered in true_divide

    c:\users\kelda\desktop\repositories\github\pyamr\main\pyamr\core\acsi.py:121: RuntimeWarning:

    invalid value encountered in true_divide


    Combinations:
               DATE       SPECIMEN  MICROORGANISM  LAB_NUMBER ANTIMICROBIAL_x ANTIMICROBIAL_y SENSITIVITY_x SENSITIVITY_y class
    0    2112-10-05  BLOOD CULTURE  VIRIDANS S...     3530668    CLINDAMYCIN    ERYTHROMYCIN              S             R    SR
    1    2112-10-05  BLOOD CULTURE  VIRIDANS S...     3530668    CLINDAMYCIN    PENICILLIN G              S             S    SS
    2    2112-10-05  BLOOD CULTURE  VIRIDANS S...     3530668    CLINDAMYCIN      VANCOMYCIN              S             S    SS
    3    2112-10-05  BLOOD CULTURE  VIRIDANS S...     3530668   ERYTHROMYCIN    PENICILLIN G              R             S    RS
    4    2112-10-05  BLOOD CULTURE  VIRIDANS S...     3530668   ERYTHROMYCIN      VANCOMYCIN              R             S    RS
    ...         ...            ...            ...         ...            ...             ...            ...           ...   ...
    5074 2202-04-26          URINE  MORGANELLA...     8654517  NITROFURAN...      TOBRAMYCIN              R             R    RR
    5075 2202-04-26          URINE  MORGANELLA...     8654517  NITROFURAN...   TRIMETHOPR...              R             R    RR
    5076 2202-04-26          URINE  MORGANELLA...     8654517  PIPERACILL...      TOBRAMYCIN              S             R    SR
    5077 2202-04-26          URINE  MORGANELLA...     8654517  PIPERACILL...   TRIMETHOPR...              S             R    SR
    5078 2202-04-26          URINE  MORGANELLA...     8654517     TOBRAMYCIN   TRIMETHOPR...              R             R    RR

    [5079 rows x 9 columns]

    Contingency:
    class                                                                  II  IR  IS  RI   RR   RS  SI   SR   SS  acsi
    DATE       SPECIMEN      MICROORGANISM  ANTIMICROBI... ANTIMICROBI...                                              
    2112-10-05 BLOOD CULTURE VIRIDANS ST... CLINDAMYCIN    ERYTHROMYCIN   NaN NaN NaN NaN  NaN  NaN NaN  1.0  NaN   0.0
                                                           PENICILLIN G   NaN NaN NaN NaN  NaN  NaN NaN  NaN  1.0   0.0
                                                           VANCOMYCIN     NaN NaN NaN NaN  NaN  NaN NaN  NaN  1.0   0.0
                                            ERYTHROMYCIN   PENICILLIN G   NaN NaN NaN NaN  NaN  1.0 NaN  NaN  NaN   0.0
                                                           VANCOMYCIN     NaN NaN NaN NaN  NaN  1.0 NaN  NaN  NaN   0.0
    ...                                                                    ..  ..  ..  ..  ...  ...  ..  ...  ...   ...
    2202-04-26 URINE         MORGANELLA ... NITROFURANTOIN TOBRAMYCIN     NaN NaN NaN NaN  1.0  NaN NaN  NaN  NaN   0.0
                                                           TRIMETHOPRI... NaN NaN NaN NaN  1.0  NaN NaN  NaN  NaN   0.0
                                            PIPERACILLI... TOBRAMYCIN     NaN NaN NaN NaN  NaN  NaN NaN  1.0  NaN   0.0
                                                           TRIMETHOPRI... NaN NaN NaN NaN  NaN  NaN NaN  1.0  NaN   0.0
                                            TOBRAMYCIN     TRIMETHOPRI... NaN NaN NaN NaN  1.0  NaN NaN  NaN  NaN   0.0

    [4464 rows x 10 columns]




.. GENERATED FROM PYTHON SOURCE LINES 108-111

Let's compute the ``ACSI``.

.. note:: We are loading previously computed combinations.

.. GENERATED FROM PYTHON SOURCE LINES 111-127

.. code-block:: default
   :lineno-start: 112


    # Libraries
    from pyamr.datasets.load import fixture

    # Path
    combinations = fixture(name='mimic/asci/combinations.csv')

    # Lets compute the overall index
    contingency = ACSI().compute(
        combinations.reset_index(),
        groupby=[],
        flag_combinations=True,
        return_combinations=False
    )









.. GENERATED FROM PYTHON SOURCE LINES 128-129

Let's visualise the result

.. GENERATED FROM PYTHON SOURCE LINES 129-166

.. code-block:: default
   :lineno-start: 130


    # ------------------------------------------
    # Display
    # ------------------------------------------
    # Display
    import numpy as np
    import seaborn as sns
    import matplotlib.pyplot as plt

    # Get unique antimicrobials
    s1 = set(combinations.ANTIMICROBIAL_x.unique())
    s2 = set(combinations.ANTIMICROBIAL_x.unique())
    abxs = s1.union(s2)

    # Create index with all pairs
    index = pd.MultiIndex.from_product([abxs, abxs])

    # Reformat
    aux = contingency['acsi'] \
        .reindex(index, fill_value=np.nan) \
        .unstack()

    # Create figure
    fig, axs = plt.subplots(nrows=1, ncols=1,
         sharey=False, sharex=False, figsize=(12, 9)
    )

    # Display
    sns.heatmap(data=aux * 100, ax=axs,
        annot=True, annot_kws={'size':7}, square=True,
        linewidth=.5, xticklabels=True, yticklabels=True,
        cmap='coolwarm', vmin=-70, vmax=70, center=0,
        cbar_kws={'label': 'Collateral Sensitivity Index'})

    # Show
    plt.tight_layout()
    plt.show()



.. image-sg:: /_examples/indexes/images/sphx_glr_plot_acsi_b_mimic_001.png
   :alt: plot acsi b mimic
   :srcset: /_examples/indexes/images/sphx_glr_plot_acsi_b_mimic_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.350 seconds)


.. _sphx_glr_download__examples_indexes_plot_acsi_b_mimic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_acsi_b_mimic.py <plot_acsi_b_mimic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_acsi_b_mimic.ipynb <plot_acsi_b_mimic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
