
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\indexes\plot_dri_b_mimic.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_indexes_plot_dri_b_mimic.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_indexes_plot_dri_b_mimic.py:


``DRI`` - Example using ``MIMIC``
---------------------------------

In the field of healthcare, analyzing drug resistance in antimicrobial
use is crucial for understanding and combating the growing problem of
antibiotic resistance. One example is the Drug Resistance Index o ``DRI``.
In this example, we compute such index using ``MIMIC``, comprehensive,
a widely-used and freely available healthcare database that contains
de-identified electronic health records of over 60,000 intensive care unit
patients. Within ``MIMIC``, researchers have access to rich information,
including patient demographics, clinical notes, laboratory results, and
medication records. This dataset provides the necessary data, susceptibility
and prescription information, to compute the drug resistance  index.

.. note:: In ``MIMIC``, the deidentification process for structured data
          required the removal of dates. In particular, dates were shifted
          into the future by a random offset for each individual patient in
          a consistent manner to preserve intervals, resulting in stays which
          occur sometime between the years 2100 and 2200. Time of day, day of
          the week, and approximate seasonality were conserved during date
          shifting.

.. GENERATED FROM PYTHON SOURCE LINES 25-84

.. code-block:: default
   :lineno-start: 26


    # Define sphinx gallery configuration
    # sphinx_gallery_thumbnail_number = 2

    # Libraries
    import sys
    import warnings
    import numpy as np
    import pandas as pd
    import seaborn as sns
    import matplotlib as mpl

    from pathlib import Path

    try:
        __file__
        TERMINAL = True
    except:
        TERMINAL = False

    # -------------------------
    # Configuration
    # -------------------------
    # Params
    rc = {
        'axes.linewidth': 0.5,
        'axes.labelsize': 9,
        'axes.titlesize': 11,
        'xtick.labelsize': 7,
        'ytick.labelsize': 7,
    }

    # Configure seaborn style (context=talk)
    sns.set_theme(style="white", rc=rc)

    # Configure warnings
    warnings.filterwarnings("ignore",
        category=pd.errors.DtypeWarning)

    # -------------------------------------------------------
    # Constants
    # -------------------------------------------------------
    # Rename columns for susceptibility
    rename_susceptibility = {
        'chartdate': 'DATE',
        'micro_specimen_id': 'LAB_NUMBER',
        'spec_type_desc': 'SPECIMEN',
        'org_name': 'MICROORGANISM',
        'ab_name': 'ANTIMICROBIAL',
        'interpretation': 'SENSITIVITY'
    }

    # Rename columns for prescriptions
    rename_prescriptions = {
        'drug': 'DRUG'
    }










.. GENERATED FROM PYTHON SOURCE LINES 85-86

First, we need to load the ``susceptibility`` test data

.. GENERATED FROM PYTHON SOURCE LINES 86-111

.. code-block:: default
   :lineno-start: 87


    # -----------------------------
    # Load susceptibility test data
    # -----------------------------
    # Helper
    subset = rename_susceptibility.values()

    # Load data
    path = Path('../../pyamr/datasets/mimic')
    data1 = pd.read_csv(path / 'susceptibility.csv')

    # Rename columns
    data1 = data1.rename(columns=rename_susceptibility)

    # Format data
    data1 = data1[subset]
    data1 = data1.dropna(subset=subset, how='any')
    data1.DATE = pd.to_datetime(data1.DATE)
    data1.SENSITIVITY = data1.SENSITIVITY.replace({
        'S': 'sensitive',
        'R': 'resistant',
        'I': 'intermediate',
        'P': 'pass'
    })








.. GENERATED FROM PYTHON SOURCE LINES 112-115

.. code-block:: default
   :lineno-start: 112

    data1.head(5)







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>DATE</th>
          <th>LAB_NUMBER</th>
          <th>SPECIMEN</th>
          <th>MICROORGANISM</th>
          <th>ANTIMICROBIAL</th>
          <th>SENSITIVITY</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHIA COLI</td>
          <td>AMPICILLIN</td>
          <td>sensitive</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHIA COLI</td>
          <td>CEFAZOLIN</td>
          <td>sensitive</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHIA COLI</td>
          <td>TRIMETHOPRIM/SULFA</td>
          <td>sensitive</td>
        </tr>
        <tr>
          <th>5</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHIA COLI</td>
          <td>NITROFURANTOIN</td>
          <td>sensitive</td>
        </tr>
        <tr>
          <th>6</th>
          <td>2171-06-10</td>
          <td>3685553</td>
          <td>URINE</td>
          <td>ESCHERICHIA COLI</td>
          <td>GENTAMICIN</td>
          <td>sensitive</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 116-117

Lets also load the ``prescriptions`` (could be also overall usage) data

.. GENERATED FROM PYTHON SOURCE LINES 117-139

.. code-block:: default
   :lineno-start: 118


    # ----------------------------
    # Load prescriptions
    # ----------------------------
    # Load prescription data (limited to first nrows).
    data2 = pd.read_csv(path / 'prescriptions.csv', nrows=100000)
    data2 = data2.rename(columns=rename_prescriptions)

    # Format data
    data2.DRUG = data2.DRUG.str.upper()
    data2['DATE'] = pd.to_datetime(data2.starttime)
    data2 = data2.dropna(subset=['DATE'], how='any')

    # .. note:: We are only keeping those DRUGS which have
    #           the exact name of the antimicrobial tested
    #           in the susceptibility test record. There are
    #           also brand names that could/should be
    #           included

    # Filter
    data2 = data2[data2.DRUG.isin(data1.ANTIMICROBIAL.unique())]








.. GENERATED FROM PYTHON SOURCE LINES 140-142

.. code-block:: default
   :lineno-start: 140

    print(data2)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

           subject_id   hadm_id  pharmacy_id            starttime             stoptime drug_type  ... dose_unit_rx form_val_disp  form_unit_disp doses_per_24_hrs  route                DATE
    26       17868682  25218370     81568564  2167-05-24 20:00:00  2167-05-26 02:00:00      MAIN  ...            g             1             BAG              3.0     IV 2167-05-24 20:00:00
    48       17868682  24052239     59994266  2167-06-20 23:00:00  2167-06-22 11:00:00      MAIN  ...           mg           200              mL              2.0     IV 2167-06-20 23:00:00
    58       17868682  24052239     39104292  2167-06-22 20:00:00  2167-06-25 12:00:00      MAIN  ...           mg             3            VIAL              2.0     IV 2167-06-22 20:00:00
    60       17868682  24052239      1791946  2167-06-24 20:00:00  2167-06-25 12:00:00      MAIN  ...           mg             3            VIAL              2.0     IV 2167-06-24 20:00:00
    76       12315540  24554730     25748315  2172-08-15 11:00:00  2172-08-16 20:00:00      MAIN  ...           mg           1.5             TAB              0.0     PO 2172-08-15 11:00:00
    ...           ...       ...          ...                  ...                  ...       ...  ...          ...           ...             ...              ...    ...                 ...
    99154    15276693  21600683     24768410  2141-08-21 08:00:00  2141-08-26 18:00:00      MAIN  ...           mg             1             TAB              0.0  PO/NG 2141-08-21 08:00:00
    99218    10819462  26263456     61192290  2181-12-01 16:00:00  2181-12-02 15:00:00      MAIN  ...           mg             4              mL              3.0     IV 2181-12-01 16:00:00
    99435    17442082  26038207     88544744  2135-08-07 15:00:00  2135-08-08 14:00:00      MAIN  ...            g             1            VIAL              1.0     IV 2135-08-07 15:00:00
    99511    17442082  20010297     74705027  2135-09-10 07:00:00  2135-09-10 11:00:00      MAIN  ...           gm             1            VIAL              1.0     IV 2135-09-10 07:00:00
    99760    19103067  28239677     20279428  2124-06-02 04:00:00  2124-06-02 22:00:00      MAIN  ...           mg             2             CAP              3.0  PO/NG 2124-06-02 04:00:00

    [2655 rows x 18 columns]




.. GENERATED FROM PYTHON SOURCE LINES 143-144

Lets rename the variables.

.. GENERATED FROM PYTHON SOURCE LINES 144-156

.. code-block:: default
   :lineno-start: 145


    # Rename variables
    susceptibility, prescriptions = data1, data2

    # Show
    if TERMINAL:
        print("\nSusceptibility:")
        print(susceptibility.head(10))
        print("\nPrescriptions:")
        print(prescriptions.head(10))









.. GENERATED FROM PYTHON SOURCE LINES 157-161

Now we need to create a summary table including the resistance
value, which will be computed using ``SARI`` and the usage which
will be computed manually. This summary table is required as a
preliminary step to compute the ``DRI``.

.. GENERATED FROM PYTHON SOURCE LINES 161-204

.. code-block:: default
   :lineno-start: 162


    # ------------------------
    # Compute summary table
    # ------------------------
    # Libraries
    from pyamr.core.sari import SARI

    # Create sari instance
    sari = SARI(groupby=[
        susceptibility.DATE.dt.year,
        #'SPECIMEN',
        'MICROORGANISM',
        'ANTIMICROBIAL',
        'SENSITIVITY']
    )

    # Compute susceptibility summary table
    smmry1 = sari.compute(susceptibility,
        return_frequencies=True)

    # .. note:: We are counting the number of rows as an indicator
    #           of prescriptions. However, it would be possible to
    #           sum the doses (with caution due to units, ...)

    # Compute prescriptions summary table.
    smmry2 = prescriptions \
        .groupby(by=[prescriptions.DATE.dt.year, 'DRUG']) \
        .DRUG.count().rename('use')
        #.DOSE.sum().rename('use')
    smmry2.index.names = ['DATE', 'ANTIMICROBIAL']

    # Combine both summary tables
    smmry = smmry1.reset_index().merge(
        smmry2.reset_index(), how='inner',
        left_on=['DATE', 'ANTIMICROBIAL'],
        right_on=['DATE', 'ANTIMICROBIAL']
    )

    # Show
    if TERMINAL:
        print("\nSummary:")
        print(smmry)








.. GENERATED FROM PYTHON SOURCE LINES 206-209

.. code-block:: default
   :lineno-start: 206

    smmry







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>DATE</th>
          <th>MICROORGANISM</th>
          <th>ANTIMICROBIAL</th>
          <th>intermediate</th>
          <th>pass</th>
          <th>resistant</th>
          <th>sensitive</th>
          <th>freq</th>
          <th>sari</th>
          <th>use</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2110</td>
          <td>BETA STREPTOCOCCUS GROUP B</td>
          <td>ERYTHROMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.00</td>
          <td>3</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2110</td>
          <td>CORYNEBACTERIUM UREALYTICUM SP. NOV.</td>
          <td>ERYTHROMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.00</td>
          <td>3</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2110</td>
          <td>POSITIVE FOR GROUP B BETA STREPTOCOCCI</td>
          <td>ERYTHROMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.00</td>
          <td>3</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2110</td>
          <td>POSITIVE FOR METHICILLIN RESISTANT STAPH AUREUS</td>
          <td>ERYTHROMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.00</td>
          <td>3</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2110</td>
          <td>STAPH AUREUS COAG +</td>
          <td>ERYTHROMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>39.0</td>
          <td>21.0</td>
          <td>60.0</td>
          <td>0.65</td>
          <td>3</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>9933</th>
          <td>2210</td>
          <td>STAPHYLOCOCCUS, COAGULASE NEGATIVE</td>
          <td>VANCOMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9934</th>
          <td>2210</td>
          <td>ESCHERICHIA COLI</td>
          <td>MEROPENEM</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>9.0</td>
          <td>9.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9935</th>
          <td>2210</td>
          <td>KLEBSIELLA PNEUMONIAE</td>
          <td>MEROPENEM</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>4.0</td>
          <td>4.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9936</th>
          <td>2210</td>
          <td>PSEUDOMONAS AERUGINOSA</td>
          <td>MEROPENEM</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>2.0</td>
          <td>2.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9937</th>
          <td>2210</td>
          <td>SERRATIA MARCESCENS</td>
          <td>MEROPENEM</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
      </tbody>
    </table>
    <p>9938 rows × 10 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 210-211

Lets compute the ``DRI``

.. GENERATED FROM PYTHON SOURCE LINES 211-241

.. code-block:: default
   :lineno-start: 212


    # -------------------------
    # Compute DRI
    # -------------------------
    # Libraries
    from pyamr.core.dri import DRI

    # Instance
    obj = DRI(
        column_resistance='sari',
        column_usage='use'
    )

    # Compute overall DRI
    dri1 = obj.compute(smmry,
        groupby=['DATE'],
        return_usage=True)

    # Compute DRI by organism
    dri2 = obj.compute(smmry,
        groupby=['DATE', 'MICROORGANISM'],
        return_usage=True)


    if TERMINAL:
        print("DRI overall:")
        print(dri1)
        print("DRI by microorganism:")
        print(dri2)








.. GENERATED FROM PYTHON SOURCE LINES 243-245

.. code-block:: default
   :lineno-start: 243

    dri1






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>use_period</th>
          <th>dri</th>
        </tr>
        <tr>
          <th>DATE</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>2110</th>
          <td>30.0</td>
          <td>0.681667</td>
        </tr>
        <tr>
          <th>2111</th>
          <td>262.0</td>
          <td>0.251580</td>
        </tr>
        <tr>
          <th>2112</th>
          <td>196.0</td>
          <td>0.103980</td>
        </tr>
        <tr>
          <th>2113</th>
          <td>159.0</td>
          <td>0.132956</td>
        </tr>
        <tr>
          <th>2114</th>
          <td>64.0</td>
          <td>0.057600</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>2206</th>
          <td>303.0</td>
          <td>0.110191</td>
        </tr>
        <tr>
          <th>2207</th>
          <td>135.0</td>
          <td>0.261192</td>
        </tr>
        <tr>
          <th>2208</th>
          <td>36.0</td>
          <td>0.214109</td>
        </tr>
        <tr>
          <th>2209</th>
          <td>192.0</td>
          <td>0.217839</td>
        </tr>
        <tr>
          <th>2210</th>
          <td>75.0</td>
          <td>0.037037</td>
        </tr>
      </tbody>
    </table>
    <p>101 rows × 2 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 247-249

.. code-block:: default
   :lineno-start: 247

    dri2






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>use_period</th>
          <th>dri</th>
        </tr>
        <tr>
          <th>DATE</th>
          <th>MICROORGANISM</th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th rowspan="5" valign="top">2110</th>
          <th>BETA STREPTOCOCCUS GROUP B</th>
          <td>3.0</td>
          <td>1.00</td>
        </tr>
        <tr>
          <th>CORYNEBACTERIUM UREALYTICUM SP. NOV.</th>
          <td>3.0</td>
          <td>1.00</td>
        </tr>
        <tr>
          <th>POSITIVE FOR GROUP B BETA STREPTOCOCCI</th>
          <td>3.0</td>
          <td>1.00</td>
        </tr>
        <tr>
          <th>POSITIVE FOR METHICILLIN RESISTANT STAPH AUREUS</th>
          <td>3.0</td>
          <td>1.00</td>
        </tr>
        <tr>
          <th>STAPH AUREUS COAG +</th>
          <td>3.0</td>
          <td>0.65</td>
        </tr>
        <tr>
          <th>...</th>
          <th>...</th>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th rowspan="5" valign="top">2210</th>
          <th>PSEUDOMONAS AERUGINOSA</th>
          <td>5.0</td>
          <td>0.00</td>
        </tr>
        <tr>
          <th>SERRATIA MARCESCENS</th>
          <td>10.0</td>
          <td>0.00</td>
        </tr>
        <tr>
          <th>STAPH AUREUS COAG +</th>
          <td>5.0</td>
          <td>0.00</td>
        </tr>
        <tr>
          <th>STAPHYLOCOCCUS LUGDUNENSIS</th>
          <td>5.0</td>
          <td>0.00</td>
        </tr>
        <tr>
          <th>STAPHYLOCOCCUS, COAGULASE NEGATIVE</th>
          <td>5.0</td>
          <td>0.00</td>
        </tr>
      </tbody>
    </table>
    <p>4125 rows × 2 columns</p>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 250-251

Lets visualise the overall ``DRI``.

.. GENERATED FROM PYTHON SOURCE LINES 251-267

.. code-block:: default
   :lineno-start: 252


    # --------------------------------------------
    # Plot
    # --------------------------------------------
    # Libraries
    import matplotlib.pyplot as plt
    import seaborn as sns

    # Display using relplot
    g = sns.relplot(data=dri1.reset_index(), x='DATE', y='dri',
        height=2, aspect=3.0, kind='line',
        linewidth=2, markersize=0, marker='o'
    )

    plt.tight_layout()




.. image-sg:: /_examples/indexes/images/sphx_glr_plot_dri_b_mimic_001.png
   :alt: plot dri b mimic
   :srcset: /_examples/indexes/images/sphx_glr_plot_dri_b_mimic_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 268-269

Lets visualise the microorganism-wise ``DRI``.

.. GENERATED FROM PYTHON SOURCE LINES 269-315

.. code-block:: default
   :lineno-start: 270


    # --------------------------------------------
    # Format
    # --------------------------------------------
    # Copy results
    aux = dri2.copy(deep=True)

    # Combine with summary
    aux = aux.merge(smmry, how='left',
        left_on=['DATE', 'MICROORGANISM'],
        right_on=['DATE', 'MICROORGANISM'])

    # Find microorganisms with more samples
    top = aux.groupby(by='MICROORGANISM') \
        .freq.sum().sort_values(ascending=False) \
        .head(4)

    # Filter by top microorganisms
    aux = aux[aux.MICROORGANISM.isin(top.index)]

    # --------------------------------------------
    # Plot
    # --------------------------------------------
    # Display
    g = sns.relplot(data=aux,
        x='DATE', y='dri', hue='MICROORGANISM',
        row='MICROORGANISM', palette='rocket',
        #style='event', col='region', palette='palette',
        height=1.5, aspect=4.0, kind='line', legend=False,
        linewidth=2, markersize=0, marker='o')

    """
    # Iterate over each subplot to customize further
    for title, ax in g.axes_dict.items():
        ax.text(1., .85, title, transform=ax.transAxes,
            fontsize=9, fontweight="normal",
            horizontalalignment='right')
    """
    # Configure
    g.tight_layout()
    g.set_titles("{row_name}")
    #g.set_titles("")

    # Show
    plt.show()




.. image-sg:: /_examples/indexes/images/sphx_glr_plot_dri_b_mimic_002.png
   :alt: STAPH AUREUS COAG +, ENTEROCOCCUS SP., ESCHERICHIA COLI, KLEBSIELLA PNEUMONIAE
   :srcset: /_examples/indexes/images/sphx_glr_plot_dri_b_mimic_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 316-317

The top microorganisms are:

.. GENERATED FROM PYTHON SOURCE LINES 317-319

.. code-block:: default
   :lineno-start: 317

    top





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    MICROORGANISM
    ESCHERICHIA COLI         101050.0
    STAPH AUREUS COAG +       28165.0
    KLEBSIELLA PNEUMONIAE     28094.0
    ENTEROCOCCUS SP.          10585.0
    Name: freq, dtype: float64



.. GENERATED FROM PYTHON SOURCE LINES 320-321

The results look as follows:

.. GENERATED FROM PYTHON SOURCE LINES 321-327

.. code-block:: default
   :lineno-start: 321

    aux.rename(columns={
        'intermediate': 'I',
        'sensitive': 'S',
        'resistant': 'R',
        'pass': 'P'
    }).round(decimals=2)





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>DATE</th>
          <th>MICROORGANISM</th>
          <th>use_period</th>
          <th>dri</th>
          <th>ANTIMICROBIAL</th>
          <th>I</th>
          <th>P</th>
          <th>R</th>
          <th>S</th>
          <th>freq</th>
          <th>sari</th>
          <th>use</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>4</th>
          <td>2110</td>
          <td>STAPH AUREUS COAG +</td>
          <td>3.0</td>
          <td>0.65</td>
          <td>ERYTHROMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>39.0</td>
          <td>21.0</td>
          <td>60.0</td>
          <td>0.65</td>
          <td>3</td>
        </tr>
        <tr>
          <th>32</th>
          <td>2111</td>
          <td>ENTEROCOCCUS SP.</td>
          <td>7.0</td>
          <td>0.35</td>
          <td>VANCOMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>23.0</td>
          <td>43.0</td>
          <td>66.0</td>
          <td>0.35</td>
          <td>7</td>
        </tr>
        <tr>
          <th>33</th>
          <td>2111</td>
          <td>ESCHERICHIA COLI</td>
          <td>5.0</td>
          <td>0.23</td>
          <td>CEFTRIAXONE</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>25.0</td>
          <td>107.0</td>
          <td>133.0</td>
          <td>0.20</td>
          <td>2</td>
        </tr>
        <tr>
          <th>34</th>
          <td>2111</td>
          <td>ESCHERICHIA COLI</td>
          <td>5.0</td>
          <td>0.23</td>
          <td>CEFAZOLIN</td>
          <td>1.0</td>
          <td>0.0</td>
          <td>32.0</td>
          <td>100.0</td>
          <td>133.0</td>
          <td>0.25</td>
          <td>3</td>
        </tr>
        <tr>
          <th>38</th>
          <td>2111</td>
          <td>KLEBSIELLA PNEUMONIAE</td>
          <td>5.0</td>
          <td>0.04</td>
          <td>CEFTRIAXONE</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>25.0</td>
          <td>26.0</td>
          <td>0.04</td>
          <td>2</td>
        </tr>
        <tr>
          <th>...</th>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
          <td>...</td>
        </tr>
        <tr>
          <th>9928</th>
          <td>2210</td>
          <td>ESCHERICHIA COLI</td>
          <td>10.0</td>
          <td>0.28</td>
          <td>CEFTRIAXONE</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>5.0</td>
          <td>4.0</td>
          <td>9.0</td>
          <td>0.56</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9929</th>
          <td>2210</td>
          <td>ESCHERICHIA COLI</td>
          <td>10.0</td>
          <td>0.28</td>
          <td>MEROPENEM</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>9.0</td>
          <td>9.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9930</th>
          <td>2210</td>
          <td>KLEBSIELLA PNEUMONIAE</td>
          <td>10.0</td>
          <td>0.00</td>
          <td>CEFTRIAXONE</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>4.0</td>
          <td>4.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9931</th>
          <td>2210</td>
          <td>KLEBSIELLA PNEUMONIAE</td>
          <td>10.0</td>
          <td>0.00</td>
          <td>MEROPENEM</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>4.0</td>
          <td>4.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
        <tr>
          <th>9935</th>
          <td>2210</td>
          <td>STAPH AUREUS COAG +</td>
          <td>5.0</td>
          <td>0.00</td>
          <td>VANCOMYCIN</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>0.0</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>0.00</td>
          <td>5</td>
        </tr>
      </tbody>
    </table>
    <p>1108 rows × 12 columns</p>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  13.613 seconds)


.. _sphx_glr_download__examples_indexes_plot_dri_b_mimic.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_dri_b_mimic.py <plot_dri_b_mimic.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_dri_b_mimic.ipynb <plot_dri_b_mimic.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
