
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\tutorial\statistics\plot_core_stats_adfuller.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_tutorial_statistics_plot_core_stats_adfuller.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_tutorial_statistics_plot_core_stats_adfuller.py:


ADFuller
============================

.. todo:: Instead of calling the ``adf.from_list_dataframe``,
          include an option in the ``grid_search`` method to
          return the result as a dataframe (to_dataframe).

The Augmented Dickey-Fuller test...

.. GENERATED FROM PYTHON SOURCE LINES 12-95




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none



    adf-statistic                 -10.4837
    adf-pvalue                         0.0
    adf-nlags                            0
    adf-nobs                            99
    adf-stationary                    True
    adf-criticalvalue_1%           -4.0533
    adf-criticalvalue_5%           -3.4558
    adf-criticalvalue_10%          -3.1536
    adf-x                    [102.68839...
    adf-regression                      ct
    adf-model                (-10.48372...
    adf-id                         ADF(ct)
    dtype: object


    Standard:
        adfuller test stationarity (ct)    
    =======================================
    statistic:                      -10.484
    pvalue:                         0.00000   
    nlags:                                0    
    nobs:                                99     
    stationarity (α=0.05):       stationary
    =======================================

    Verbose:
        adfuller test stationarity (ct)    
    =======================================
    statistic:                      -10.484
    pvalue:                         0.00000   
    nlags:                                0    
    nobs:                                99     
    stationarity (α=0.05):       stationary
    ---------------------------------------
    critical value (1%):           -4.05325 
    critical value (5%):           -3.45581 
    critical value (10%):          -3.15359
    ---------------------------------------
    H0:                    Exists unit-root
    H1:                 No Exists unit-root
    pvalue <= α:                  Reject H0
    =======================================

    Identifier
    ADF(ct)
    1/3. ADF(c)
    2/3. ADF(n)
    3/3. ADF(ct)


                                0              1              2
    adf-statistic        -10.3652        -0.1459       -10.4837
    adf-pvalue                0.0         0.6337            0.0
    adf-nlags                   0             12              0
    adf-nobs                   99             87             99
    adf-stationary           True          False           True
    adf-critica...        -3.4982        -2.5919        -4.0533
    adf-critica...        -2.8912        -1.9445        -3.4558
    adf-critica...        -2.5826        -1.6141        -3.1536
    adf-regression              c              n             ct
    adf-x           [102.68839...  [102.68839...  [102.68839...
    adf-model       (-10.36519...  (-0.145900...  (-10.48372...
    adf-id                 ADF(c)         ADF(n)        ADF(ct)






|

.. code-block:: default
   :lineno-start: 14



    # Libraries
    import numpy as np
    import pandas as pd

    # Import statsmodels
    from statsmodels.tsa.stattools import adfuller

    # Import pyAMR
    from pyamr.core.stats.adfuller import ADFWrapper

    # ----------------------------
    # set basic configuration
    # ----------------------------
    # Set pandas configuration.
    pd.set_option('display.max_colwidth', 14)
    pd.set_option('display.width', 150)
    pd.set_option('display.precision', 4)

    # ----------------------------
    # create data
    # ----------------------------
    # Constants
    length = 100
    offset = 100
    slope = 10

    # Create timeseries.
    x = np.arange(length)
    y = np.random.rand(length) * slope + offset

    # ----------------------------
    # create adfuller object
    # ----------------------------
    # Create object
    adf = ADFWrapper(estimator=adfuller).fit(x=y, regression='ct')

    # Print series.
    print("\n")
    print(adf.as_series())

    # Print summary.
    print("\n")
    print("Standard:")
    print(adf.as_summary())
    print("\nVerbose:")
    print(adf.as_summary(verbose=10))

    # Print identifier.
    print("\nIdentifier")
    print(adf._identifier())

    # -----------------
    # Save and load
    # -----------------
    # File location
    #fname = '../examples/saved/adfuller-sample.pickle'

    # Save
    #adf.save(fname=fname)

    # Load
    #adf = ADFWrapper().load(fname=fname)


    # -----------
    # Grid search
    # -----------
    # Create wrapper
    adf = ADFWrapper(adfuller)

    # Grid parameters.
    grid_params = {'x': [y], 'regression': ['c','n','ct']}

    # Get wrappers.
    lwrappers = adf.grid_search(grid_params=grid_params, verbose=1)

    # Get summary.
    summary = adf.from_list_dataframe(lwrappers, flabel=True)

    # Plot result.
    print("\n")
    print(summary.T)

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.037 seconds)


.. _sphx_glr_download__examples_tutorial_statistics_plot_core_stats_adfuller.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_core_stats_adfuller.py <plot_core_stats_adfuller.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_core_stats_adfuller.ipynb <plot_core_stats_adfuller.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
