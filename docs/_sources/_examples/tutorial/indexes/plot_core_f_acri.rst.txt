
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\tutorial\indexes\plot_core_f_acri.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_tutorial_indexes_plot_core_f_acri.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_tutorial_indexes_plot_core_f_acri.py:


Collateral Sensitivity Index (``ACSI``)
=======================================

The Collateral Sensitivity Index - ``ACSI`` ...

.. warning:: Pending...!

.. GENERATED FROM PYTHON SOURCE LINES 12-13

First, lets create the susceptibility test records dataset

.. GENERATED FROM PYTHON SOURCE LINES 13-33

.. code-block:: default
   :lineno-start: 14


    # Libraries
    import pandas as pd

    from pyamr.datasets.load import fixture

    # ----------------------------------
    # Create data
    # ----------------------------------
    # Load the fixture_05.csv file.
    susceptibility = fixture(name='fixture_06.csv')

    # Format DataFrame
    susceptibility.SENSITIVITY = \
        susceptibility.SENSITIVITY.replace({
            'resistant': 'R',
            'intermediate': 'I',
            'sensitive': 'S'
    })








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Lets see the susceptibility test records

.. GENERATED FROM PYTHON SOURCE LINES 35-39

.. code-block:: default
   :lineno-start: 35

    susceptibility.head(10)








.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>DATE</th>
          <th>LAB_NUMBER</th>
          <th>SPECIMEN</th>
          <th>MICROORGANISM</th>
          <th>ANTIMICROBIAL</th>
          <th>SENSITIVITY</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2021-01-01</td>
          <td>lab1</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>S</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2021-01-01</td>
          <td>lab1</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>ACIP</td>
          <td>S</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2021-01-01</td>
          <td>lab2</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>S</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2021-01-01</td>
          <td>lab2</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>ACIP</td>
          <td>R</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2021-01-01</td>
          <td>lab3</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>S</td>
        </tr>
        <tr>
          <th>5</th>
          <td>2021-01-01</td>
          <td>lab3</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>ACIP</td>
          <td>R</td>
        </tr>
        <tr>
          <th>6</th>
          <td>2021-01-01</td>
          <td>lab4</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>R</td>
        </tr>
        <tr>
          <th>7</th>
          <td>2021-01-01</td>
          <td>lab4</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>ACIP</td>
          <td>R</td>
        </tr>
        <tr>
          <th>8</th>
          <td>2021-01-02</td>
          <td>lab5</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>S</td>
        </tr>
        <tr>
          <th>9</th>
          <td>2021-01-02</td>
          <td>lab5</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>ACIP</td>
          <td>S</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 40-41

Lets compute the Antimicrobial Collateral Sensitivity Index or ``ACSI``

.. GENERATED FROM PYTHON SOURCE LINES 41-64

.. code-block:: default
   :lineno-start: 42


    # ------------------------------------------
    # Compute the index
    # ------------------------------------------
    # Libraries
    from pyamr.core.acsi import ACSI

    # Compute index
    contingency, combinations = \
        ACSI().compute(susceptibility,
            groupby=[
                'DATE',
                'SPECIMEN',
                'MICROORGANISM'
            ],
            return_combinations=True)

    # Show
    print("\nCombinations:")
    print(combinations)
    print("\nContingency:")
    print(contingency)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Combinations:
             DATE SPECIMEN MICROORGANISM LAB_NUMBER ANTIMICROBIAL_x ANTIMICROBIAL_y SENSITIVITY_x SENSITIVITY_y class
    0  2021-01-01   BLDCUL          ECOL       lab1            AAUG            ACIP             S             S    SS
    1  2021-01-01   BLDCUL          ECOL       lab2            AAUG            ACIP             S             R    SR
    2  2021-01-01   BLDCUL          ECOL       lab3            AAUG            ACIP             S             R    SR
    3  2021-01-01   BLDCUL          ECOL       lab4            AAUG            ACIP             R             R    RR
    4  2021-01-02   BLDCUL          ECOL       lab5            AAUG            ACIP             S             S    SS
    5  2021-01-02   BLDCUL          ECOL       lab6            AAUG            ACIP             S             R    SR
    6  2021-01-02   BLDCUL          ECOL       lab7            AAUG            ACIP             R             R    RR
    7  2021-01-03   BLDCUL          ECOL       lab8            AAUG            ACIP             S             I    SI
    8  2021-01-03   BLDCUL          ECOL       lab9            AAUG            ACIP             R             R    RR
    9  2021-01-03   BLDCUL          SAUR       lab9            ACIP            ACIP             R             R    RR
    10 2021-01-04   URICUL          ECOL      lab10            AAUG            ACIP             R             S    RS
    11 2021-01-04   URICUL          SAUR      lab10            AAUG            APEN             R             R    RR

    Contingency:
    class                                                               RR   RS   SI   SR   SS    acsi
    DATE       SPECIMEN MICROORGANISM ANTIMICROBIAL_x ANTIMICROBIAL_y                                 
    2021-01-01 BLDCUL   ECOL          AAUG            ACIP             1.0  NaN  NaN  2.0  1.0  0.2027
    2021-01-02 BLDCUL   ECOL          AAUG            ACIP             1.0  NaN  NaN  1.0  1.0  0.3662
    2021-01-03 BLDCUL   ECOL          AAUG            ACIP             1.0  NaN  1.0  NaN  NaN  0.0000
                        SAUR          ACIP            ACIP             1.0  NaN  NaN  NaN  NaN  0.0000
    2021-01-04 URICUL   ECOL          AAUG            ACIP             NaN  1.0  NaN  NaN  NaN  0.0000
                        SAUR          AAUG            APEN             1.0  NaN  NaN  NaN  NaN  0.0000




.. GENERATED FROM PYTHON SOURCE LINES 65-66

Lets see the contingency matrix

.. GENERATED FROM PYTHON SOURCE LINES 66-81

.. code-block:: default
   :lineno-start: 67


    # Rename for docs display
    rename = {
        'MICROORGANISM': 'ORGANISM',
        'ANTIMICROBIAL_x': 'ANTIBIOTIC_x',
        'ANTIMICROBIAL_y': 'ANTIBIOTIC_y'
    }

    # Show
    contingency \
        .reset_index() \
        .rename(columns=rename) \
        .round(decimals=3)







.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th>class</th>
          <th>DATE</th>
          <th>SPECIMEN</th>
          <th>ORGANISM</th>
          <th>ANTIBIOTIC_x</th>
          <th>ANTIBIOTIC_y</th>
          <th>RR</th>
          <th>RS</th>
          <th>SI</th>
          <th>SR</th>
          <th>SS</th>
          <th>acsi</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>2021-01-01</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>ACIP</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>2.0</td>
          <td>1.0</td>
          <td>0.203</td>
        </tr>
        <tr>
          <th>1</th>
          <td>2021-01-02</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>ACIP</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>1.0</td>
          <td>1.0</td>
          <td>0.366</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2021-01-03</td>
          <td>BLDCUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>ACIP</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.000</td>
        </tr>
        <tr>
          <th>3</th>
          <td>2021-01-03</td>
          <td>BLDCUL</td>
          <td>SAUR</td>
          <td>ACIP</td>
          <td>ACIP</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.000</td>
        </tr>
        <tr>
          <th>4</th>
          <td>2021-01-04</td>
          <td>URICUL</td>
          <td>ECOL</td>
          <td>AAUG</td>
          <td>ACIP</td>
          <td>NaN</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.000</td>
        </tr>
        <tr>
          <th>5</th>
          <td>2021-01-04</td>
          <td>URICUL</td>
          <td>SAUR</td>
          <td>AAUG</td>
          <td>APEN</td>
          <td>1.0</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>NaN</td>
          <td>0.000</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 82-83

Lets compute and visualise the ``overall`` contingency matrix

.. GENERATED FROM PYTHON SOURCE LINES 84-120

.. code-block:: default
   :lineno-start: 85


    # Lets compute the overall index
    contingency = ACSI().compute(
        combinations.reset_index(),
        groupby=[],
        flag_combinations=True,
        return_combinations=False
    )

    # Show
    print(contingency)

    # Display
    import numpy as np
    import seaborn as sns
    import matplotlib.pyplot as plt

    # Create index with all pairs
    index = pd.MultiIndex.from_product(
        [susceptibility.ANTIMICROBIAL.unique(),
         susceptibility.ANTIMICROBIAL.unique()]
    )

    # Reformat
    aux = contingency['acsi'] \
        .reindex(index, fill_value=np.nan)\
        .unstack()

    # Display
    sns.heatmap(data=aux * 100, annot=True, linewidth=.5,
                cmap='coolwarm', vmin=-70, vmax=70, center=0,
                square=True)

    # Show
    plt.show()




.. image-sg:: /_examples/tutorial/indexes/images/sphx_glr_plot_core_f_acri_001.png
   :alt: plot core f acri
   :srcset: /_examples/tutorial/indexes/images/sphx_glr_plot_core_f_acri_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    class                             RR   RS   SI   SR   SS    acsi
    ANTIMICROBIAL_x ANTIMICROBIAL_y                                 
    AAUG            ACIP             3.0  1.0  1.0  3.0  2.0  0.1469
                    APEN             1.0  NaN  NaN  NaN  NaN  0.0000
    ACIP            ACIP             1.0  NaN  NaN  NaN  NaN  0.0000




.. GENERATED FROM PYTHON SOURCE LINES 121-122

Lets compute and visualise the ``temporal`` contingency matrix

.. GENERATED FROM PYTHON SOURCE LINES 122-136

.. code-block:: default
   :lineno-start: 123


    # Lets compute the overall index
    contingency = ACSI().compute(
        combinations.reset_index(),
        groupby=['DATE'],
        flag_combinations=True,
        return_combinations=False)

    # Show
    print(contingency)

    # .. note:: Look for a nice visualisation of a matrix over time. In
    #           addition to python libraries such as plotly, animations,
    #           ... we can also check for js libraries such as Apache
    #           echarts.



.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    class                                        RR   RS   SI   SR   SS    acsi
    DATE       ANTIMICROBIAL_x ANTIMICROBIAL_y                                 
    2021-01-01 AAUG            ACIP             1.0  NaN  NaN  2.0  1.0  0.2027
    2021-01-02 AAUG            ACIP             1.0  NaN  NaN  1.0  1.0  0.3662
    2021-01-03 AAUG            ACIP             1.0  NaN  1.0  NaN  NaN  0.0000
               ACIP            ACIP             1.0  NaN  NaN  NaN  NaN  0.0000
    2021-01-04 AAUG            ACIP             NaN  1.0  NaN  NaN  NaN  0.0000
                               APEN             1.0  NaN  NaN  NaN  NaN  0.0000





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.190 seconds)


.. _sphx_glr_download__examples_tutorial_indexes_plot_core_f_acri.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_core_f_acri.py <plot_core_f_acri.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_core_f_acri.ipynb <plot_core_f_acri.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
