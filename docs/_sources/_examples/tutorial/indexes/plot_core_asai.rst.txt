
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\tutorial\indexes\plot_core_asai.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_tutorial_indexes_plot_core_asai.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_tutorial_indexes_plot_core_asai.py:


Spectrum of Activity (ASAI)
==========================================

.. todo::
    - Improve visualization method (generic).
    - Create further examples with temporal visualization.
    - Create further examples with general heatmap.
    - Create further examples with animation?

.. warning:: The contribution (cont) value for Staphylococcus haemolyticus
             should be 0 instead of 1/10 because the sari index is higher
             than the threshold (32 > 20) and therefore the antimicrobial
             is not considered effective.

The antimicrobial spectrum of activity refers to the range of microbe species that are
susceptible to these agents and therefore can be treated. In general, antimicrobial agents
are classified into broad, intermediate or narrow spectrum. Broad spectrum antimicrobials
are active against both Gram-positive and Gram-negative bacteria. In contrast, narrow
spectrum antimicrobials have limited activity and are effective only against particular
species of bacteria. While these profiles appeared in the mid-1950s, little effort has been
made to define them. Furthermore, such ambiguous labels are overused for different
and even contradictory purposes.

For more information see: :py:mod:`pyamr.core.asai.ASAI`

.. image:: ../../../_static/imgs/index-asai.png
    :width: 600
    :align: center
    :alt: ASAI

.. GENERATED FROM PYTHON SOURCE LINES 33-103

.. code-block:: default
   :lineno-start: 34


    # Import libraries
    import sys
    import pandas as pd
    import numpy as np
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import specific libraries
    from pyamr.core.asai import ASAI
    from pyamr.core.asai import asai
    from pyamr.graphics.utils import scalar_colormap

    # Configure seaborn style (context=talk)
    sns.set(style="white")

    # Set matplotlib
    mpl.rcParams['xtick.labelsize'] = 9
    mpl.rcParams['ytick.labelsize'] = 9
    mpl.rcParams['axes.titlesize'] = 11
    mpl.rcParams['legend.fontsize'] = 9

    # Pandas configuration
    pd.set_option('display.max_colwidth', 40)
    pd.set_option('display.width', 300)
    pd.set_option('display.precision', 4)

    # Numpy configuration
    np.set_printoptions(precision=2)


    # ---------------------
    # Create data
    # ---------------------
    # Create data
    data = [
        ['Staphylococcus', 'coagulase negative', 'ANTIBIOTIC_1', 'P', 0.88, 1, 0.20, 1/10, 1/3],
        ['Staphylococcus', 'epidermidis', 'ANTIBIOTIC_1', 'P', 0.11, 1, 0.20, 1/10, 1/3],
        ['Staphylococcus', 'haemolyticus', 'ANTIBIOTIC_1', 'P', 0.32, 1, 0.20, 1/10, 1/3],
        ['Staphylococcus', 'lugdumensis', 'ANTIBIOTIC_1', 'P', 0.45, 1, 0.20, 1/10, 1/3],
        ['Staphylococcus', 'saporphyticus', 'ANTIBIOTIC_1', 'P', 0.18, 1, 0.20, 1/10, 1/3],
        ['Staphylococcus', 'aureus', 'ANTIBIOTIC_1', 'P', 0.13, 5, 0.20, 5/10, 1/3],

        ['Enterococcus', 'durans', 'ANTIBIOTIC_1', 'N', 0.64, 1, 0.20, 1/4, 1/3],
        ['Enterococcus', 'faecium', 'ANTIBIOTIC_1', 'N', 0.48, 1, 0.20, 1/4, 1/3],
        ['Enterococcus', 'gallinarium', 'ANTIBIOTIC_1', 'N', 0.10, 1, 0.20, 1/4, 1/3],
        ['Enterococcus', 'faecalis', 'ANTIBIOTIC_1', 'N', 0.09, 1, 0.20, 1/4, 1/3],

        ['Streptococcus', 'viridians', 'ANTIBIOTIC_1', 'P', 0.08, 1, 0.20, 1/3, 1/3],
        ['Streptococcus', 'pneumoniae', 'ANTIBIOTIC_1', 'P', 0.89, 2, 0.20, 2/3, 1/3]
    ]


    # Create dataframe
    dataframe = pd.DataFrame(data, columns=['GENUS',
                                            'SPECIE',
                                            'ANTIBIOTIC',
                                            'GRAM',
                                            'RESISTANCE',
                                            'FREQUENCY',
                                            'THRESHOLD',
                                            'W_SPECIE',
                                            'W_GENUS'])

    # Show data
    print("\nData:")
    print(dataframe)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Data:
                 GENUS              SPECIE    ANTIBIOTIC GRAM  RESISTANCE  FREQUENCY  THRESHOLD  W_SPECIE  W_GENUS
    0   Staphylococcus  coagulase negative  ANTIBIOTIC_1    P        0.88          1        0.2    0.1000   0.3333
    1   Staphylococcus         epidermidis  ANTIBIOTIC_1    P        0.11          1        0.2    0.1000   0.3333
    2   Staphylococcus        haemolyticus  ANTIBIOTIC_1    P        0.32          1        0.2    0.1000   0.3333
    3   Staphylococcus         lugdumensis  ANTIBIOTIC_1    P        0.45          1        0.2    0.1000   0.3333
    4   Staphylococcus       saporphyticus  ANTIBIOTIC_1    P        0.18          1        0.2    0.1000   0.3333
    5   Staphylococcus              aureus  ANTIBIOTIC_1    P        0.13          5        0.2    0.5000   0.3333
    6     Enterococcus              durans  ANTIBIOTIC_1    N        0.64          1        0.2    0.2500   0.3333
    7     Enterococcus             faecium  ANTIBIOTIC_1    N        0.48          1        0.2    0.2500   0.3333
    8     Enterococcus         gallinarium  ANTIBIOTIC_1    N        0.10          1        0.2    0.2500   0.3333
    9     Enterococcus            faecalis  ANTIBIOTIC_1    N        0.09          1        0.2    0.2500   0.3333
    10   Streptococcus           viridians  ANTIBIOTIC_1    P        0.08          1        0.2    0.3333   0.3333
    11   Streptococcus          pneumoniae  ANTIBIOTIC_1    P        0.89          2        0.2    0.6667   0.3333




.. GENERATED FROM PYTHON SOURCE LINES 104-106

Lets use the ASAI object


.. GENERATED FROM PYTHON SOURCE LINES 107-135

.. code-block:: default
   :lineno-start: 108


    # -------------------------------
    # Create antimicrobial spectrum
    # -------------------------------
    # Create antimicrobial spectrum of activity instance
    asai = ASAI(column_genus='GENUS',
                column_specie='SPECIE',
                column_resistance='RESISTANCE',
                column_frequency='FREQUENCY',
                column_threshold='THRESHOLD',
                column_wgenus='W_GENUS',
                column_wspecie='W_SPECIE')
    # Compute
    scores = asai.compute(dataframe,
        groupby=['ANTIBIOTIC', 'GRAM'],
        weights='uniform',
        threshold=None,
        min_freq=0)

    # Unstack
    scores = scores.unstack()

    # Show
    #print("\nASAI (instance):")
    #print(scores)

    scores






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead tr th {
            text-align: left;
        }

        .dataframe thead tr:last-of-type th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr>
          <th></th>
          <th colspan="2" halign="left">N_GENUS</th>
          <th colspan="2" halign="left">N_SPECIE</th>
          <th colspan="2" halign="left">ASAI_SCORE</th>
        </tr>
        <tr>
          <th>GRAM</th>
          <th>N</th>
          <th>P</th>
          <th>N</th>
          <th>P</th>
          <th>N</th>
          <th>P</th>
        </tr>
        <tr>
          <th>ANTIBIOTIC</th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>ANTIBIOTIC_1</th>
          <td>1.0</td>
          <td>2.0</td>
          <td>4.0</td>
          <td>8.0</td>
          <td>0.5</td>
          <td>0.5</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 136-137

Lets display the information graphically

.. GENERATED FROM PYTHON SOURCE LINES 138-170

.. code-block:: default
   :lineno-start: 139


    # -----------------------------
    # Plot
    # -----------------------------
    # Variables to plot.
    x = scores.index.values
    y_n = scores['ASAI_SCORE']['N'].values
    y_p = scores['ASAI_SCORE']['P'].values

    # Constants
    colormap_p = scalar_colormap(y_p, cmap='Blues', vmin=-0.1, vmax=1.1)
    colormap_n = scalar_colormap(y_n, cmap='Reds', vmin=-0.1, vmax=1.1)

    # Create figure
    f, ax = plt.subplots(1, 1, figsize=(8, 0.5))

    # Plot
    sns.barplot(x=y_p, y=x, palette=colormap_p, ax=ax, orient='h',
                saturation=0.5, label='Gram-positive')
    sns.barplot(x=-y_n, y=x, palette=colormap_n, ax=ax, orient='h',
                saturation=0.5, label='Gram-negative')

    # Configure
    sns.despine(bottom=True)

    # Configure
    ax.set_xlim([-1, 1])

    # Legend
    plt.legend()

    # Display
    plt.show()


.. image-sg:: /_examples/tutorial/indexes/images/sphx_glr_plot_core_asai_001.png
   :alt: plot core asai
   :srcset: /_examples/tutorial/indexes/images/sphx_glr_plot_core_asai_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.991 seconds)


.. _sphx_glr_download__examples_tutorial_indexes_plot_core_asai.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_core_asai.py <plot_core_asai.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_core_asai.ipynb <plot_core_asai.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
