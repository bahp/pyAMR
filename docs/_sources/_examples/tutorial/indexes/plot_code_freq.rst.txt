
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\tutorial\indexes\plot_code_freq.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_tutorial_indexes_plot_code_freq.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_tutorial_indexes_plot_code_freq.py:


Frequency counts
==========================================

.. GENERATED FROM PYTHON SOURCE LINES 5-55




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    '\n# -----------------------------------------------------------------------------\n#                                 CONSTANTS\n# -----------------------------------------------------------------------------\n# Paths\nfname_tests = "freq_tests_pairs_year"\nfname_isola = "freq_isolates_pairs_year"\nfpath_tests = "../../results/microbiology/frequencies/%s.csv" % fname_tests\nfpath_isola = "../../results/microbiology/frequencies/%s.csv" % fname_isola\n\n# Object\nfreq = Frequency()\n\n# Read data\ndff_tests = freq.load(fpath_tests)\ndff_isola = freq.load(fpath_isola)\ndff_reset = dff_tests.reset_index()\n\n# Basic dataframe.\n# IMPORTANT. Note that isolates refer to a single infectious organism which\n# is tested against many different anttibiotics. Hence the only way the sum\n# refers to isolate is by grouping the laboratory tests by infectious\n# organisms.\ndfy = pd.DataFrame()\ndfy[\'Tests\'] = dff_tests[\'freq_ris\'].groupby(level=[0]).sum()\ndfy[\'Isolates\'] = dff_isola[\'freq\'].groupby(level=[0]).sum()\ndfy[\'Tests/Isolates\'] = dfy[\'Tests\'].div(dfy[\'Isolates\'])\ndfy[\'Antibiotics\'] = dff_reset.groupby(\'dateReceived\').antibioticCode.nunique()\ndfy[\'Organisms\'] = dff_reset.groupby(\'dateReceived\').organismCode.nunique()\n\n# Fill last row.\ndfy.loc[\'Total\',:] = np.nan\ndfy.loc[\'Total\',\'Tests\'] = dfy[\'Tests\'].sum(axis=0)\ndfy.loc[\'Total\',\'Isolates\'] = dfy[\'Isolates\'].sum(axis=0)\ndfy.loc[\'Total\',\'Tests/Isolates\'] = dfy[\'Tests/Isolates\'].mean()\ndfy.loc[\'Total\',\'Antibiotics\'] = dff_reset.antibioticCode.nunique()\ndfy.loc[\'Total\',\'Organisms\'] = dff_reset.organismCode.nunique()\n\n# Print dataframe.\nprint("\n\n")\nprint("Pandas:")\nprint("-------")\nprint(dfy)\n\n# Print dataframe latex format.\nprint("\n\n")\nprint("Latex:")\nprint("-------")\nprint(dfy.to_latex())\n'





|

.. code-block:: default
   :lineno-start: 6


    """
    # -----------------------------------------------------------------------------
    #                                 CONSTANTS
    # -----------------------------------------------------------------------------
    # Paths
    fname_tests = "freq_tests_pairs_year"
    fname_isola = "freq_isolates_pairs_year"
    fpath_tests = "../../results/microbiology/frequencies/%s.csv" % fname_tests
    fpath_isola = "../../results/microbiology/frequencies/%s.csv" % fname_isola

    # Object
    freq = Frequency()

    # Read data
    dff_tests = freq.load(fpath_tests)
    dff_isola = freq.load(fpath_isola)
    dff_reset = dff_tests.reset_index()

    # Basic dataframe.
    # IMPORTANT. Note that isolates refer to a single infectious organism which
    # is tested against many different anttibiotics. Hence the only way the sum
    # refers to isolate is by grouping the laboratory tests by infectious
    # organisms.
    dfy = pd.DataFrame()
    dfy['Tests'] = dff_tests['freq_ris'].groupby(level=[0]).sum()
    dfy['Isolates'] = dff_isola['freq'].groupby(level=[0]).sum()
    dfy['Tests/Isolates'] = dfy['Tests'].div(dfy['Isolates'])
    dfy['Antibiotics'] = dff_reset.groupby('dateReceived').antibioticCode.nunique()
    dfy['Organisms'] = dff_reset.groupby('dateReceived').organismCode.nunique()

    # Fill last row.
    dfy.loc['Total',:] = np.nan
    dfy.loc['Total','Tests'] = dfy['Tests'].sum(axis=0)
    dfy.loc['Total','Isolates'] = dfy['Isolates'].sum(axis=0)
    dfy.loc['Total','Tests/Isolates'] = dfy['Tests/Isolates'].mean()
    dfy.loc['Total','Antibiotics'] = dff_reset.antibioticCode.nunique()
    dfy.loc['Total','Organisms'] = dff_reset.organismCode.nunique()

    # Print dataframe.
    print("\n\n")
    print("Pandas:")
    print("-------")
    print(dfy)

    # Print dataframe latex format.
    print("\n\n")
    print("Latex:")
    print("-------")
    print(dfy.to_latex())
    """

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.001 seconds)


.. _sphx_glr_download__examples_tutorial_indexes_plot_code_freq.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_code_freq.py <plot_code_freq.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_code_freq.ipynb <plot_code_freq.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
