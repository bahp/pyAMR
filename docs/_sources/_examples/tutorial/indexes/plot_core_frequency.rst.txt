
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples/tutorial/indexes/plot_core_frequency.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download__examples_tutorial_indexes_plot_core_frequency.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_tutorial_indexes_plot_core_frequency.py:


Index - Frequency
============================

.. warning::
        - Improve visualization.
        - Create further examples with temporal visualization.
        - Create further examples with general heatmap.
        - Create further examples with animation?

.. GENERATED FROM PYTHON SOURCE LINES 11-201



.. image:: /_examples/tutorial/indexes/images/sphx_glr_plot_core_frequency_001.png
    :alt: Frequency (daily, monthly and overlapping intervals)
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none



    --------------------------------------------------------------------------------
    Show OVERALL frequencies:
    --------------------------------------------------------------------------------

    Pairs:
    SENSITIVITY        <<do not report>>  highly resistant  intermediate  resistant  sensitive
    SPECIE ANTIBIOTIC                                                                         
    ECOL   AAUG                      0.0               0.0           0.0       27.0       85.0
           AGEN                      0.0               0.0           0.0       15.0       97.0
           ATAZ                      0.0               3.0           2.0       12.0       20.0
           ATRI                      0.0               0.0           0.0       49.0       63.0
    PAER   AAUG                      0.0               0.0           0.0        1.0        0.0
           AGEN                      0.0               0.0           0.0        4.0       30.0
           ATAZ                      1.0               0.0           0.0        5.0       27.0
           ATRI                      0.0               0.0           0.0        1.0        0.0

    Antibiotics:
    SENSITIVITY  <<do not report>>  highly resistant  intermediate  resistant  sensitive
    ANTIBIOTIC                                                                          
    AAUG                       0.0               0.0           0.0       28.0       85.0
    AGEN                       0.0               0.0           0.0       19.0      127.0
    ATAZ                       1.0               3.0           2.0       17.0       47.0
    ATRI                       0.0               0.0           0.0       50.0       63.0

    Organisms:
    SENSITIVITY  <<do not report>>  highly resistant  intermediate  resistant  sensitive
    SPECIE                                                                              
    ECOL                       0.0               3.0           2.0      103.0      265.0
    PAER                       1.0               0.0           0.0       11.0       57.0


    --------------------------------------------------------------------------------
    Show TEMPORAL frequencies:
    --------------------------------------------------------------------------------

    Daily:
    SENSITIVITY                   <<do not report>>  highly resistant  intermediate  resistant  sensitive
    SPECIE ANTIBIOTIC DATE                                                                               
    ECOL   AAUG       2016-01-01                0.0               0.0           0.0        3.0       10.0
                      2016-01-02                0.0               0.0           0.0        2.0        3.0
                      2016-01-03                0.0               0.0           0.0        2.0        2.0
                      2016-01-04                0.0               0.0           0.0        0.0        2.0
                      2016-01-05                0.0               0.0           0.0        0.0        0.0
    ...                                         ...               ...           ...        ...        ...
    PAER   ATAZ       2016-01-07                1.0               0.0           0.0        0.0        5.0
                      2016-01-08                0.0               0.0           0.0        0.0        6.0
                      2016-01-09                0.0               0.0           0.0        0.0        4.0
                      2016-01-10                0.0               0.0           0.0        2.0        1.0
           ATRI       2016-01-06                0.0               0.0           0.0        1.0        0.0

    [66 rows x 5 columns]

    Monthly:
    SENSITIVITY                   <<do not report>>  highly resistant  intermediate  resistant  sensitive
    SPECIE ANTIBIOTIC DATE                                                                               
    ECOL   AAUG       2016-01-31                0.0               0.0           0.0       27.0       85.0
           AGEN       2016-01-31                0.0               0.0           0.0       15.0       97.0
           ATAZ       2016-01-31                0.0               3.0           2.0       12.0       20.0
           ATRI       2016-01-31                0.0               0.0           0.0       49.0       63.0
    PAER   AAUG       2016-01-31                0.0               0.0           0.0        1.0        0.0
           AGEN       2016-01-31                0.0               0.0           0.0        4.0       30.0
           ATAZ       2016-01-31                1.0               0.0           0.0        5.0       27.0
           ATRI       2016-01-31                0.0               0.0           0.0        1.0        0.0
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    /Users/cbit/Desktop/repositories/environments/venv-py37-pyamr/lib/python3.7/site-packages/pandas/plotting/_matplotlib/core.py:1167: UserWarning: Attempting to set identical left == right == 552.0 results in singular transformations; automatically expanding.
      ax.set_xlim(left, right)
    No handles with labels found to put in legend.
    No handles with labels found to put in legend.






|

.. code-block:: default
   :lineno-start: 13



    # Import libraries
    import sys
    import glob
    import pandas as pd
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt

    # Import specific libraries
    from pyamr.core.freq import Frequency

    # Configure seaborn style (context=talk)
    sns.set(style="white")

    # Set matplotlib
    mpl.rcParams['xtick.labelsize'] = 9
    mpl.rcParams['ytick.labelsize'] = 9
    mpl.rcParams['axes.titlesize'] = 11
    mpl.rcParams['legend.fontsize'] = 9

    # -----------------------
    # Load data
    # -----------------------
    # Path
    # Path
    path = '../../../pyamr/datasets/microbiology/susceptibility.csv'

    # Load all files
    data = pd.read_csv(path,
        parse_dates=['dateReceived'],
        low_memory=False)

    # -------------------------
    # Main
    # -------------------------
    # Keep only relevant columns
    #data = data[['antibioticCode',
    #             'organismCode',
    #             'dateReceived',
    #             'sensitivity']]


    # .. note: To reduce computing time and to be able
    #          to plot the results we are selecting only
    #          one (organism, antimicrobial) pair.

    # Selected
    orgs = ['ECOL', 'PAER']
    abxs = ['ATAZ', 'ATRI', 'AGEN', 'AAUG']

    # Filter for two examples
    is_org = data['organismCode'].isin(orgs)
    is_abx = data['antibioticCode'].isin(abxs)
    data = data[is_org & is_abx]

    # -------------------------
    # Create frequency instance
    # -------------------------
    # Create instance
    freq = Frequency(column_antibiotic='antibioticCode',
                     column_organism='organismCode',
                     column_date='dateReceived',
                     column_outcome='sensitivity')

    # ------------------------
    # Examples compute overall
    # ------------------------
    # Compute pairs
    pairs = freq.compute(data, by_category='pairs')

    # Compute antibiotics
    antibiotics = freq.compute(data, by_category='antibiotics')

    # Compute organisms
    organisms = freq.compute(data, by_category='organisms')

    # Show
    print("\n")
    print("-" * 80)
    print("Show OVERALL frequencies:")
    print("-" * 80)
    print("\nPairs:")
    print(pairs)
    print("\nAntibiotics:")
    print(antibiotics)
    print("\nOrganisms:")
    print(organisms)

    # -------------------------------------------
    # Examples compute independent time intervals
    # -------------------------------------------
    # Examples compute ITI
    daily = freq.compute(data, strategy='ITI',
                         by_category='pairs',
                         fs='1D')

    monthly = freq.compute(data, strategy='ITI',
                           by_category='pairs',
                           fs='1M')

    # Show
    print("\n")
    print("-" * 80)
    print("Show TEMPORAL frequencies:")
    print("-" * 80)
    print("\nDaily:")
    print(daily)
    print("\nMonthly:")
    print(monthly)

    # -------------------------------------------
    # Examples compute overlapping time intervals
    # -------------------------------------------
    """
    .. note: Not working! Fix!

    # Examples compute OTI (daily)
    oti_1 = freq.compute(data, strategy='OTI',
                         by_category='pairs',
                         wshift='1D',
                         wsize=5)

    # Examples compute OTI (monthly)
    oti_2 = freq.compute(data, strategy='OTI',
                         by_category='pairs',
                         wshift='1M',
                         wsize=2)
    """

    # ----------------
    # Plot
    # ----------------
    # Show comparison for each pair
    f, axes = plt.subplots(4, 1, figsize=(15, 8))

    # Flatten axes
    axes = axes.flatten()

    # Plot ITI (daily)
    for i, (pair, group) in enumerate(daily.groupby(level=[0, 1])):
        group.index = group.index.droplevel([0, 1])
        group.sum(axis=1).plot(marker='o', ms=3, label=pair,
            linewidth=0.5, markeredgecolor='k', markeredgewidth=0.3,
            ax=axes[0])

    # Plot ITI (monthly)
    for i, (pair, group) in enumerate(monthly.groupby(level=[0, 1])):
        group.index = group.index.droplevel([0, 1])
        group.sum(axis=1).plot(marker='o', ms=3, label=pair,
              linewidth=0.5, markeredgecolor='k', markeredgewidth=0.3,
              ax=axes[1])
    """
    .. note: Belongs to previously commented part

    # Plot OTI
    for i, (pair, group) in enumerate(oti_1.groupby(level=[0, 1])):
        group.index = group.index.droplevel([0, 1])
        group.sum(axis=1).plot(marker='o', ms=3, label=pair,
                               linewidth=0.5, markeredgecolor='k', markeredgewidth=0.3,
                               ax=axes[2])

    # Plot OTI
    for i, (pair, group) in enumerate(oti_2.groupby(level=[0, 1])):
        group.index = group.index.droplevel([0, 1])
        group.sum(axis=1).plot(marker='o', ms=3, label=pair,
                               linewidth=0.5, markeredgecolor='k', markeredgewidth=0.3,
                               ax=axes[3])
    """

    # Set legend
    for ax in axes:
        ax.legend()
        ax.set_xlabel('')
        ax.grid(True)

    # Set titles
    axes[0].set_ylabel('Daily')
    axes[1].set_ylabel('Monthly')
    axes[2].set_ylabel('OTI(1D,5)')
    axes[3].set_ylabel('OTI(1M,2)')

    # Despine
    sns.despine(bottom=True, left=True)

    # Set title
    plt.suptitle("Frequency (daily, monthly and overlapping intervals)")

    # Show
    plt.show()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.663 seconds)


.. _sphx_glr_download__examples_tutorial_indexes_plot_core_frequency.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_core_frequency.py <plot_core_frequency.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_core_frequency.ipynb <plot_core_frequency.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
