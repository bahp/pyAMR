
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples\tutorial\regression\plot_core_regression_a_theilsens.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__examples_tutorial_regression_plot_core_regression_a_theilsens.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_tutorial_regression_plot_core_regression_a_theilsens.py:


Using Theil-Sen estimator
=========================

In non-parametric statistics, the Theilâ€“Sen estimator is a method for robustly
fitting a line to sample points in the plane (simple linear regression) by
choosing the median of the slopes of all lines through pairs of points.

.. warning: This TheilSensWrapper imports the Regression
            base from a different file. Why do we have
            wbase.py, wreg.py and wregression.py?

.. GENERATED FROM PYTHON SOURCE LINES 14-62

.. code-block:: default
   :lineno-start: 14

    # Libraries
    import numpy as np
    import pandas as pd

    # Libraries.
    import matplotlib.pyplot as plt

    # Import pyamr
    from pyamr.datasets.load import make_timeseries
    from pyamr.core.regression.theilsens import TheilSensWrapper

    # Set pandas configuration.
    pd.set_option('display.max_colwidth', 14)
    pd.set_option('display.width', 150)
    pd.set_option('display.precision', 4)

    def make_line(length, offset, slope):
        """Create straight series."""
        # Create timeseries.
        x = np.arange(length)
        y = np.random.rand(length) * slope + offset + x
        return x, y

    # ----------------------------
    # create data
    # ----------------------------
    # Constants
    length = 100
    offset = 100
    slope = 10

    # Create series
    #x, y = make_line(length, offset, slope)

    # Create timeseries data
    x, y, f = make_timeseries()

    # Create object
    theilsens = TheilSensWrapper().fit(x=x, y=y)

    # Print series.
    print("\nSeries:")
    print(theilsens.as_series())

    # Print summary.
    print("\nSummary:")
    print(theilsens.as_summary())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Series:
    theilsens-slope               3.7184
    theilsens-intercept         237.4303
    theilsens-ci_lower            3.0622
    theilsens-ci_upper            4.3009
    theilsens-x            [0, 1, 2, ...
    theilsens-y            [40.118153...
    theilsens-model        (3.7183711...
    theilsens-id               THEILSENS
    dtype: object

    Summary:
             TheilSens Slope   
    ==================================
    slope:                      3.7184
    intercept:                237.4303
    ci_lower:                   3.0622
    ci_upper:                   4.3009
    ==================================




.. GENERATED FROM PYTHON SOURCE LINES 63-64

Lets visualise the predictions

.. GENERATED FROM PYTHON SOURCE LINES 64-99

.. code-block:: default
   :lineno-start: 65


    # -----------------
    #  Predictions
    # -----------------
    # Variables.
    start, end, = None, 180

    # Compute predictions.
    preds = theilsens.get_prediction(start=start, end=end)

    # Create figure
    fig, ax = plt.subplots(1, 1, figsize=(11,5))

    # Plot truth values.
    ax.plot(x, y, color='#A6CEE3', alpha=0.5, marker='o',
             markeredgecolor='k', markeredgewidth=0.5,
             markersize=5, linewidth=0.75, label='Observed')

    # Plot forecasted values.
    ax.plot(preds[0, :], preds[1, :], color='#FF0000', alpha=1.00,
             linewidth=2.0, label=theilsens._identifier())

    # Plot the confidence intervals.
    ax.fill_between(preds[0, :],
                    preds[2, :],
                    preds[3, :],
                    color='r',
                    alpha=0.1)

    # Legend
    plt.legend()

    # Show
    plt.show()




.. image-sg:: /_examples/tutorial/regression/images/sphx_glr_plot_core_regression_a_theilsens_001.png
   :alt: plot core regression a theilsens
   :srcset: /_examples/tutorial/regression/images/sphx_glr_plot_core_regression_a_theilsens_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 100-101

Let's perform Grid Search

.. GENERATED FROM PYTHON SOURCE LINES 101-115

.. code-block:: default
   :lineno-start: 102


    # ----------
    # Grid search
    # -----------
    # Grid parameters.
    grid_params = {'x': [x], 'y': [y], 'alpha': [0.05, 0.1]}

    # Get summary.
    summary = TheilSensWrapper().grid_search_dataframe(grid_params=grid_params)

    # Plot result
    #print("Grid Search:")
    #print(summary)








.. GENERATED FROM PYTHON SOURCE LINES 117-118

.. code-block:: default
   :lineno-start: 117

    summary





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>0</th>
          <th>1</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>theilsens-slope</th>
          <td>3.7184</td>
          <td>3.7184</td>
        </tr>
        <tr>
          <th>theilsens-intercept</th>
          <td>237.4303</td>
          <td>237.4303</td>
        </tr>
        <tr>
          <th>theilsens-ci_lower</th>
          <td>3.0622</td>
          <td>3.1688</td>
        </tr>
        <tr>
          <th>theilsens-ci_upper</th>
          <td>4.3009</td>
          <td>4.218</td>
        </tr>
        <tr>
          <th>theilsens-alpha</th>
          <td>0.05</td>
          <td>0.1</td>
        </tr>
        <tr>
          <th>theilsens-x</th>
          <td>[0, 1, 2, ...</td>
          <td>[0, 1, 2, ...</td>
        </tr>
        <tr>
          <th>theilsens-y</th>
          <td>[40.118153...</td>
          <td>[40.118153...</td>
        </tr>
        <tr>
          <th>theilsens-model</th>
          <td>(3.7183711...</td>
          <td>(3.7183711...</td>
        </tr>
        <tr>
          <th>theilsens-id</th>
          <td>THEILSENS</td>
          <td>THEILSENS</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.088 seconds)


.. _sphx_glr_download__examples_tutorial_regression_plot_core_regression_a_theilsens.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_core_regression_a_theilsens.py <plot_core_regression_a_theilsens.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_core_regression_a_theilsens.ipynb <plot_core_regression_a_theilsens.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
