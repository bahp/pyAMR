# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ test ]
  pull_request:
    branches: [ test ]

jobs:
  build:

    #runs-on: ubuntu-latest
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    python-version: [3.7, 3.8, 3.9]

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest] #, macos-latest]
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2.4.0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.1
      with:
        python-version: ${{ matrix.python-version }}
        
    # .. todo: Check if requirements.txt exists
    #          if ( -f requirements.txt ); then xxxxxx; fi
    #          works for ubuntu, mac, breaks for windows
    #.         windows-latest takes to long - removed
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install -r requirements.txt

    # Install this package
    - name: Install package
      run: |
        python -m pip install .

    # Lint with Flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        #flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        #flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    # Run tests with pytest (see pytest.ini)
    - name: Test with pytest
      run: |
        python -m pip install pytest
        python -m pip install pytest-cov
        pytest

    # Generate report
    - name: Generate coverage report (pytest)
      run:
        pytest . --cov=./ --cov-report=xml

    # Create an upload coverage report
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3.1.0
      with:
        files: ./coverage.xml
        #token: